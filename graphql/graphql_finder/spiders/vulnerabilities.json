{
    "Subscription Test": {
        "status": "Potential Data Leakage",
        "details": {
            "type": "Subscription",
            "field": "paste",
            "query": "subscription { paste { id } }",
            "status_code": 200
        },
        "query": "subscription { paste { id } }",
        "response": {
            "errors": [
                {
                    "message": "Subscription must return Async Iterable or Observable. Received: <Promise at 0x7f945b619b50 fulfilled with <rx.core.anonymousobservable.AnonymousObservable object at 0x7f945b683f50>>"
                }
            ],
            "data": null
        }
    }
}
{
    "Path Traversal Test on uploadPaste": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Path Traversal",
            "severity": "High",
            "description": "Test to identify if file operations allow navigation to parent directories, potentially accessing unauthorized files."
        },
        "query": "\n                mutation {\n                    uploadPaste(filename:\"../../../../../tmp/file.txt\", content:\"test\") {\n                        result\n                    }\n                }\n                ",
        "response": {
            "data": {
                "uploadPaste": {
                    "result": "test"
                }
            }
        }
    }
}
{
    "DoS Attack": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Denial of Service (DoS)",
            "severity": "High",
            "description": "This test floods the server with repeated requests to check if the server can handle high load without service degradation or crash.",
            "remediation": "Implement rate limiting, use a robust load balancer, and consider auto-scaling."
        },
        "query": "query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }",
        "response": {
            "400": 100
        }
    }
}
{
    "SQL Injection Test on 'pastes' field": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "SQL Injection",
            "severity": "High",
            "description": "Attempts to exploit SQL injection vulnerabilities by injecting malicious SQL code through GraphQL queries.",
            "remediation": "Use parameterized queries or prepared statements to handle user input."
        },
        "query": "\n        query {\n            pastes(filter: \"one two three'\") {\n                title\n                content\n                public\n            }\n        }\n        ",
        "response": {
            "errors": [
                {
                    "message": "(sqlite3.OperationalError) near \"one\": syntax error\n[SQL: SELECT pastes.id AS pastes_id, pastes.title AS pastes_title, pastes.content AS pastes_content, pastes.public AS pastes_public, pastes.user_agent AS pastes_user_agent, pastes.ip_addr AS pastes_ip_addr, pastes.owner_id AS pastes_owner_id, pastes.burn AS pastes_burn \nFROM pastes \nWHERE pastes.public = 0 AND pastes.burn = 0 AND title = 'one two three'' or content = 'one two three'' ORDER BY pastes.id DESC\n LIMIT ? OFFSET ?]\n[parameters: (1000, 0)]\n(Background on this error at: http://sqlalche.me/e/13/e3q8)"
                }
            ],
            "data": {
                "pastes": null
            }
        }
    }
}
{
    "Get Users Test": {
        "status": "Test Not Applicable",
        "details": {
            "description": "Tests if user data for administrators can be fetched without proper authorization.",
            "severity": "High"
        },
        "query": "\n        query getUsers {\n          users(where: {role: ADMINISTRATOR}) {\n            edges {\n              node {\n                userId\n                name\n              }\n            }\n          }\n        }\n        ",
        "response": "400 Client Error: BAD REQUEST for url: http://localhost:5013/graphql"
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "allSettings",
            "type": "RootQuery",
            "query": "mutation { allSettings(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { allSettings(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"allSettings\" on type \"RootMutation\". Did you mean \"updateSettings\"?",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "discussionSettings",
            "type": "RootQuery",
            "query": "mutation { discussionSettings(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { discussionSettings(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"discussionSettings\" on type \"RootMutation\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "generalSettings",
            "type": "RootQuery",
            "query": "mutation { generalSettings(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { generalSettings(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"generalSettings\" on type \"RootMutation\". Did you mean \"updateSettings\"?",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "readingSettings",
            "type": "RootQuery",
            "query": "mutation { readingSettings(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { readingSettings(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"readingSettings\" on type \"RootMutation\". Did you mean \"updateSettings\"?",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "writingSettings",
            "type": "RootQuery",
            "query": "mutation { writingSettings(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { writingSettings(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"writingSettings\" on type \"RootMutation\". Did you mean \"updateSettings\"?",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "discussionSettingsDefaultCommentStatus",
            "type": "Settings",
            "query": "mutation { discussionSettingsDefaultCommentStatus(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { discussionSettingsDefaultCommentStatus(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"discussionSettingsDefaultCommentStatus\" on type \"RootMutation\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "discussionSettingsDefaultPingStatus",
            "type": "Settings",
            "query": "mutation { discussionSettingsDefaultPingStatus(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { discussionSettingsDefaultPingStatus(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"discussionSettingsDefaultPingStatus\" on type \"RootMutation\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "generalSettingsDateFormat",
            "type": "Settings",
            "query": "mutation { generalSettingsDateFormat(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { generalSettingsDateFormat(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"generalSettingsDateFormat\" on type \"RootMutation\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "generalSettingsDescription",
            "type": "Settings",
            "query": "mutation { generalSettingsDescription(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { generalSettingsDescription(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"generalSettingsDescription\" on type \"RootMutation\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "generalSettingsEmail",
            "type": "Settings",
            "query": "mutation { generalSettingsEmail(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { generalSettingsEmail(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"generalSettingsEmail\" on type \"RootMutation\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "generalSettingsLanguage",
            "type": "Settings",
            "query": "mutation { generalSettingsLanguage(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { generalSettingsLanguage(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"generalSettingsLanguage\" on type \"RootMutation\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "generalSettingsStartOfWeek",
            "type": "Settings",
            "query": "mutation { generalSettingsStartOfWeek(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { generalSettingsStartOfWeek(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"generalSettingsStartOfWeek\" on type \"RootMutation\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "generalSettingsTimeFormat",
            "type": "Settings",
            "query": "mutation { generalSettingsTimeFormat(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { generalSettingsTimeFormat(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"generalSettingsTimeFormat\" on type \"RootMutation\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "generalSettingsTimezone",
            "type": "Settings",
            "query": "mutation { generalSettingsTimezone(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { generalSettingsTimezone(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"generalSettingsTimezone\" on type \"RootMutation\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "generalSettingsTitle",
            "type": "Settings",
            "query": "mutation { generalSettingsTitle(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { generalSettingsTitle(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"generalSettingsTitle\" on type \"RootMutation\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "generalSettingsUrl",
            "type": "Settings",
            "query": "mutation { generalSettingsUrl(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { generalSettingsUrl(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"generalSettingsUrl\" on type \"RootMutation\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "readingSettingsPostsPerPage",
            "type": "Settings",
            "query": "mutation { readingSettingsPostsPerPage(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { readingSettingsPostsPerPage(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"readingSettingsPostsPerPage\" on type \"RootMutation\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "writingSettingsDefaultCategory",
            "type": "Settings",
            "query": "mutation { writingSettingsDefaultCategory(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { writingSettingsDefaultCategory(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"writingSettingsDefaultCategory\" on type \"RootMutation\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "writingSettingsDefaultPostFormat",
            "type": "Settings",
            "query": "mutation { writingSettingsDefaultPostFormat(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { writingSettingsDefaultPostFormat(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"writingSettingsDefaultPostFormat\" on type \"RootMutation\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "writingSettingsUseSmilies",
            "type": "Settings",
            "query": "mutation { writingSettingsUseSmilies(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { writingSettingsUseSmilies(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"writingSettingsUseSmilies\" on type \"RootMutation\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "deleteWithUser",
            "type": "ContentType",
            "query": "mutation { deleteWithUser(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { deleteWithUser(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"deleteWithUser\" on type \"RootMutation\". Did you mean \"deleteUser\"?",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "addNew",
            "type": "PostTypeLabelDetails",
            "query": "mutation { addNew(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { addNew(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"addNew\" on type \"RootMutation\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "addNewItem",
            "type": "PostTypeLabelDetails",
            "query": "mutation { addNewItem(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { addNewItem(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"addNewItem\" on type \"RootMutation\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "removeFeaturedImage",
            "type": "PostTypeLabelDetails",
            "query": "mutation { removeFeaturedImage(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { removeFeaturedImage(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"removeFeaturedImage\" on type \"RootMutation\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "setFeaturedImage",
            "type": "PostTypeLabelDetails",
            "query": "mutation { setFeaturedImage(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { setFeaturedImage(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"setFeaturedImage\" on type \"RootMutation\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "srcSet",
            "type": "MediaItem",
            "query": "mutation { srcSet(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { srcSet(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"srcSet\" on type \"RootMutation\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "createdTimestamp",
            "type": "MediaItemMeta",
            "query": "mutation { createdTimestamp(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { createdTimestamp(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"createdTimestamp\" on type \"RootMutation\". Did you mean \"createComment\"?",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "updateCategory",
            "type": "RootMutation",
            "query": "mutation { updateCategory(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { updateCategory(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Field UpdateCategoryInput.id of required type ID! was not provided.",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 34
                        }
                    ]
                },
                {
                    "message": "Cannot query field \"id\" on type \"UpdateCategoryPayload\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 40
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "updatePostFormat",
            "type": "RootMutation",
            "query": "mutation { updatePostFormat(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { updatePostFormat(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Field UpdatePostFormatInput.id of required type ID! was not provided.",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 36
                        }
                    ]
                },
                {
                    "message": "Cannot query field \"id\" on type \"UpdatePostFormatPayload\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 42
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "updateTag",
            "type": "RootMutation",
            "query": "mutation { updateTag(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { updateTag(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Field UpdateTagInput.id of required type ID! was not provided.",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 29
                        }
                    ]
                },
                {
                    "message": "Cannot query field \"id\" on type \"UpdateTagPayload\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 35
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "createCategory",
            "type": "RootMutation",
            "query": "mutation { createCategory(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { createCategory(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Field CreateCategoryInput.name of required type String! was not provided.",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 34
                        }
                    ]
                },
                {
                    "message": "Cannot query field \"id\" on type \"CreateCategoryPayload\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 40
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "createComment",
            "type": "RootMutation",
            "query": "mutation { createComment(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { createComment(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"id\" on type \"CreateCommentPayload\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 39
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "createMediaItem",
            "type": "RootMutation",
            "query": "mutation { createMediaItem(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { createMediaItem(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"id\" on type \"CreateMediaItemPayload\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 41
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "createPage",
            "type": "RootMutation",
            "query": "mutation { createPage(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { createPage(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"id\" on type \"CreatePagePayload\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 36
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "createPost",
            "type": "RootMutation",
            "query": "mutation { createPost(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { createPost(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"id\" on type \"CreatePostPayload\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 36
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "createPostFormat",
            "type": "RootMutation",
            "query": "mutation { createPostFormat(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { createPostFormat(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Field CreatePostFormatInput.name of required type String! was not provided.",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 36
                        }
                    ]
                },
                {
                    "message": "Cannot query field \"id\" on type \"CreatePostFormatPayload\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 42
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "createTag",
            "type": "RootMutation",
            "query": "mutation { createTag(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { createTag(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Field CreateTagInput.name of required type String! was not provided.",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 29
                        }
                    ]
                },
                {
                    "message": "Cannot query field \"id\" on type \"CreateTagPayload\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 35
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "createUser",
            "type": "RootMutation",
            "query": "mutation { createUser(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { createUser(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Field CreateUserInput.username of required type String! was not provided.",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 30
                        }
                    ]
                },
                {
                    "message": "Cannot query field \"id\" on type \"CreateUserPayload\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 36
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "deleteCategory",
            "type": "RootMutation",
            "query": "mutation { deleteCategory(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { deleteCategory(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Field DeleteCategoryInput.id of required type ID! was not provided.",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 34
                        }
                    ]
                },
                {
                    "message": "Cannot query field \"id\" on type \"DeleteCategoryPayload\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 40
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "deleteComment",
            "type": "RootMutation",
            "query": "mutation { deleteComment(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { deleteComment(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Field DeleteCommentInput.id of required type ID! was not provided.",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 33
                        }
                    ]
                },
                {
                    "message": "Cannot query field \"id\" on type \"DeleteCommentPayload\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 39
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "deleteMediaItem",
            "type": "RootMutation",
            "query": "mutation { deleteMediaItem(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { deleteMediaItem(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Field DeleteMediaItemInput.id of required type ID! was not provided.",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 35
                        }
                    ]
                },
                {
                    "message": "Cannot query field \"id\" on type \"DeleteMediaItemPayload\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 41
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "deletePage",
            "type": "RootMutation",
            "query": "mutation { deletePage(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { deletePage(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Field DeletePageInput.id of required type ID! was not provided.",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 30
                        }
                    ]
                },
                {
                    "message": "Cannot query field \"id\" on type \"DeletePagePayload\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 36
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "deletePost",
            "type": "RootMutation",
            "query": "mutation { deletePost(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { deletePost(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Field DeletePostInput.id of required type ID! was not provided.",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 30
                        }
                    ]
                },
                {
                    "message": "Cannot query field \"id\" on type \"DeletePostPayload\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 36
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "deletePostFormat",
            "type": "RootMutation",
            "query": "mutation { deletePostFormat(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { deletePostFormat(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Field DeletePostFormatInput.id of required type ID! was not provided.",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 36
                        }
                    ]
                },
                {
                    "message": "Cannot query field \"id\" on type \"DeletePostFormatPayload\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 42
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "deleteTag",
            "type": "RootMutation",
            "query": "mutation { deleteTag(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { deleteTag(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Field DeleteTagInput.id of required type ID! was not provided.",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 29
                        }
                    ]
                },
                {
                    "message": "Cannot query field \"id\" on type \"DeleteTagPayload\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 35
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "deleteUser",
            "type": "RootMutation",
            "query": "mutation { deleteUser(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { deleteUser(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Field DeleteUserInput.id of required type ID! was not provided.",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 30
                        }
                    ]
                },
                {
                    "message": "Cannot query field \"id\" on type \"DeleteUserPayload\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 36
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "increaseCount",
            "type": "RootMutation",
            "query": "mutation { increaseCount(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { increaseCount(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Field \"increaseCount\" of type \"Int\" must not have a sub selection.",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 37
                        }
                    ]
                },
                {
                    "message": "Unknown argument \"input\" on field \"increaseCount\" of type \"RootMutation\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 26
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "registerUser",
            "type": "RootMutation",
            "query": "mutation { registerUser(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { registerUser(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Field RegisterUserInput.username of required type String! was not provided.",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 32
                        }
                    ]
                },
                {
                    "message": "Cannot query field \"id\" on type \"RegisterUserPayload\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 38
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "resetUserPassword",
            "type": "RootMutation",
            "query": "mutation { resetUserPassword(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { resetUserPassword(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"id\" on type \"ResetUserPasswordPayload\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 43
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "restoreComment",
            "type": "RootMutation",
            "query": "mutation { restoreComment(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { restoreComment(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Field RestoreCommentInput.id of required type ID! was not provided.",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 34
                        }
                    ]
                },
                {
                    "message": "Cannot query field \"id\" on type \"RestoreCommentPayload\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 40
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "sendPasswordResetEmail",
            "type": "RootMutation",
            "query": "mutation { sendPasswordResetEmail(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { sendPasswordResetEmail(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Field SendPasswordResetEmailInput.username of required type String! was not provided.",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 42
                        }
                    ]
                },
                {
                    "message": "Cannot query field \"id\" on type \"SendPasswordResetEmailPayload\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 48
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "updateComment",
            "type": "RootMutation",
            "query": "mutation { updateComment(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { updateComment(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Field UpdateCommentInput.id of required type ID! was not provided.",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 33
                        }
                    ]
                },
                {
                    "message": "Cannot query field \"id\" on type \"UpdateCommentPayload\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 39
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "updateMediaItem",
            "type": "RootMutation",
            "query": "mutation { updateMediaItem(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { updateMediaItem(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Field UpdateMediaItemInput.id of required type ID! was not provided.",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 35
                        }
                    ]
                },
                {
                    "message": "Cannot query field \"id\" on type \"UpdateMediaItemPayload\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 41
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "updatePage",
            "type": "RootMutation",
            "query": "mutation { updatePage(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { updatePage(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Field UpdatePageInput.id of required type ID! was not provided.",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 30
                        }
                    ]
                },
                {
                    "message": "Cannot query field \"id\" on type \"UpdatePagePayload\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 36
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "updatePost",
            "type": "RootMutation",
            "query": "mutation { updatePost(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { updatePost(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Field UpdatePostInput.id of required type ID! was not provided.",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 30
                        }
                    ]
                },
                {
                    "message": "Cannot query field \"id\" on type \"UpdatePostPayload\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 36
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "updateSettings",
            "type": "RootMutation",
            "query": "mutation { updateSettings(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { updateSettings(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"id\" on type \"UpdateSettingsPayload\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 40
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "updateUser",
            "type": "RootMutation",
            "query": "mutation { updateUser(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { updateUser(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Field UpdateUserInput.id of required type ID! was not provided.",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 30
                        }
                    ]
                },
                {
                    "message": "Cannot query field \"id\" on type \"UpdateUserPayload\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 36
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "deletedId",
            "type": "DeleteCategoryPayload",
            "query": "mutation { deletedId(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { deletedId(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"deletedId\" on type \"RootMutation\". Did you mean \"deleteTag\", \"deletePage\", \"deletePost\", or \"deleteUser\"?",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "deletedId",
            "type": "DeleteCommentPayload",
            "query": "mutation { deletedId(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { deletedId(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"deletedId\" on type \"RootMutation\". Did you mean \"deleteTag\", \"deletePage\", \"deletePost\", or \"deleteUser\"?",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "deletedId",
            "type": "DeleteMediaItemPayload",
            "query": "mutation { deletedId(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { deletedId(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"deletedId\" on type \"RootMutation\". Did you mean \"deleteTag\", \"deletePage\", \"deletePost\", or \"deleteUser\"?",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "deletedId",
            "type": "DeletePagePayload",
            "query": "mutation { deletedId(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { deletedId(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"deletedId\" on type \"RootMutation\". Did you mean \"deleteTag\", \"deletePage\", \"deletePost\", or \"deleteUser\"?",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "deletedId",
            "type": "DeletePostPayload",
            "query": "mutation { deletedId(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { deletedId(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"deletedId\" on type \"RootMutation\". Did you mean \"deleteTag\", \"deletePage\", \"deletePost\", or \"deleteUser\"?",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "deletedId",
            "type": "DeletePostFormatPayload",
            "query": "mutation { deletedId(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { deletedId(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"deletedId\" on type \"RootMutation\". Did you mean \"deleteTag\", \"deletePage\", \"deletePost\", or \"deleteUser\"?",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "deletedId",
            "type": "DeleteTagPayload",
            "query": "mutation { deletedId(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { deletedId(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"deletedId\" on type \"RootMutation\". Did you mean \"deleteTag\", \"deletePage\", \"deletePost\", or \"deleteUser\"?",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "deletedId",
            "type": "DeleteUserPayload",
            "query": "mutation { deletedId(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { deletedId(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"deletedId\" on type \"RootMutation\". Did you mean \"deleteTag\", \"deletePage\", \"deletePost\", or \"deleteUser\"?",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "allSettings",
            "type": "UpdateSettingsPayload",
            "query": "mutation { allSettings(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { allSettings(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"allSettings\" on type \"RootMutation\". Did you mean \"updateSettings\"?",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "discussionSettings",
            "type": "UpdateSettingsPayload",
            "query": "mutation { discussionSettings(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { discussionSettings(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"discussionSettings\" on type \"RootMutation\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "generalSettings",
            "type": "UpdateSettingsPayload",
            "query": "mutation { generalSettings(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { generalSettings(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"generalSettings\" on type \"RootMutation\". Did you mean \"updateSettings\"?",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "readingSettings",
            "type": "UpdateSettingsPayload",
            "query": "mutation { readingSettings(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { readingSettings(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"readingSettings\" on type \"RootMutation\". Did you mean \"updateSettings\"?",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "writingSettings",
            "type": "UpdateSettingsPayload",
            "query": "mutation { writingSettings(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { writingSettings(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"writingSettings\" on type \"RootMutation\". Did you mean \"updateSettings\"?",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "DoS Attack": {
        "status": "No Vulnerability Found",
        "details": {
            "vulnerability": "Denial of Service (DoS)",
            "severity": "High",
            "description": "This test floods the server with repeated requests to check if the server can handle high load without service degradation or crash.",
            "remediation": "Implement rate limiting, use a robust load balancer, and consider auto-scaling."
        },
        "query": "query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }",
        "response": {
            "200": 100
        }
    }
}
{
    "SQL Injection Test on 'pastes' field": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "SQL Injection",
            "severity": "High",
            "description": "Attempts to exploit SQL injection vulnerabilities by injecting malicious SQL code through GraphQL queries.",
            "remediation": "Use parameterized queries or prepared statements to handle user input."
        },
        "query": "\n        query {\n            pastes(filter: \"one two three'\") {\n                title\n                content\n                public\n            }\n        }\n        ",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"pastes\" on type \"RootQuery\". Did you mean \"pages\", \"posts\", \"page\", \"post\", or \"postBy\"?",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 3,
                            "column": 13
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Get Users Test": {
        "status": "Vulnerability Found",
        "details": {
            "description": "Tests if user data for administrators can be fetched without proper authorization.",
            "severity": "High"
        },
        "query": "\n        query getUsers {\n          users(where: {role: ADMINISTRATOR}) {\n            edges {\n              node {\n                userId\n                name\n              }\n            }\n          }\n        }\n        ",
        "response": {
            "errors": [
                {
                    "message": "Sorry, you are not allowed to filter users by role.",
                    "extensions": {
                        "category": "user"
                    },
                    "locations": [
                        {
                            "line": 3,
                            "column": 11
                        }
                    ],
                    "path": [
                        "users"
                    ]
                }
            ],
            "data": {
                "users": null
            },
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "allSettings",
            "type": "RootQuery",
            "query": "mutation { allSettings(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { allSettings(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"allSettings\" on type \"RootMutation\". Did you mean \"updateSettings\"?",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "discussionSettings",
            "type": "RootQuery",
            "query": "mutation { discussionSettings(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { discussionSettings(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"discussionSettings\" on type \"RootMutation\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "generalSettings",
            "type": "RootQuery",
            "query": "mutation { generalSettings(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { generalSettings(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"generalSettings\" on type \"RootMutation\". Did you mean \"updateSettings\"?",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "readingSettings",
            "type": "RootQuery",
            "query": "mutation { readingSettings(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { readingSettings(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"readingSettings\" on type \"RootMutation\". Did you mean \"updateSettings\"?",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "writingSettings",
            "type": "RootQuery",
            "query": "mutation { writingSettings(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { writingSettings(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"writingSettings\" on type \"RootMutation\". Did you mean \"updateSettings\"?",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "discussionSettingsDefaultCommentStatus",
            "type": "Settings",
            "query": "mutation { discussionSettingsDefaultCommentStatus(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { discussionSettingsDefaultCommentStatus(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"discussionSettingsDefaultCommentStatus\" on type \"RootMutation\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "discussionSettingsDefaultPingStatus",
            "type": "Settings",
            "query": "mutation { discussionSettingsDefaultPingStatus(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { discussionSettingsDefaultPingStatus(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"discussionSettingsDefaultPingStatus\" on type \"RootMutation\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "generalSettingsDateFormat",
            "type": "Settings",
            "query": "mutation { generalSettingsDateFormat(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { generalSettingsDateFormat(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"generalSettingsDateFormat\" on type \"RootMutation\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "generalSettingsDescription",
            "type": "Settings",
            "query": "mutation { generalSettingsDescription(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { generalSettingsDescription(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"generalSettingsDescription\" on type \"RootMutation\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "generalSettingsEmail",
            "type": "Settings",
            "query": "mutation { generalSettingsEmail(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { generalSettingsEmail(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"generalSettingsEmail\" on type \"RootMutation\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "generalSettingsLanguage",
            "type": "Settings",
            "query": "mutation { generalSettingsLanguage(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { generalSettingsLanguage(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"generalSettingsLanguage\" on type \"RootMutation\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "generalSettingsStartOfWeek",
            "type": "Settings",
            "query": "mutation { generalSettingsStartOfWeek(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { generalSettingsStartOfWeek(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"generalSettingsStartOfWeek\" on type \"RootMutation\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "generalSettingsTimeFormat",
            "type": "Settings",
            "query": "mutation { generalSettingsTimeFormat(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { generalSettingsTimeFormat(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"generalSettingsTimeFormat\" on type \"RootMutation\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "generalSettingsTimezone",
            "type": "Settings",
            "query": "mutation { generalSettingsTimezone(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { generalSettingsTimezone(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"generalSettingsTimezone\" on type \"RootMutation\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "generalSettingsTitle",
            "type": "Settings",
            "query": "mutation { generalSettingsTitle(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { generalSettingsTitle(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"generalSettingsTitle\" on type \"RootMutation\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "generalSettingsUrl",
            "type": "Settings",
            "query": "mutation { generalSettingsUrl(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { generalSettingsUrl(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"generalSettingsUrl\" on type \"RootMutation\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "readingSettingsPostsPerPage",
            "type": "Settings",
            "query": "mutation { readingSettingsPostsPerPage(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { readingSettingsPostsPerPage(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"readingSettingsPostsPerPage\" on type \"RootMutation\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "writingSettingsDefaultCategory",
            "type": "Settings",
            "query": "mutation { writingSettingsDefaultCategory(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { writingSettingsDefaultCategory(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"writingSettingsDefaultCategory\" on type \"RootMutation\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "writingSettingsDefaultPostFormat",
            "type": "Settings",
            "query": "mutation { writingSettingsDefaultPostFormat(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { writingSettingsDefaultPostFormat(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"writingSettingsDefaultPostFormat\" on type \"RootMutation\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "writingSettingsUseSmilies",
            "type": "Settings",
            "query": "mutation { writingSettingsUseSmilies(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { writingSettingsUseSmilies(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"writingSettingsUseSmilies\" on type \"RootMutation\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "deleteWithUser",
            "type": "ContentType",
            "query": "mutation { deleteWithUser(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { deleteWithUser(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"deleteWithUser\" on type \"RootMutation\". Did you mean \"deleteUser\"?",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "addNew",
            "type": "PostTypeLabelDetails",
            "query": "mutation { addNew(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { addNew(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"addNew\" on type \"RootMutation\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "addNewItem",
            "type": "PostTypeLabelDetails",
            "query": "mutation { addNewItem(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { addNewItem(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"addNewItem\" on type \"RootMutation\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "removeFeaturedImage",
            "type": "PostTypeLabelDetails",
            "query": "mutation { removeFeaturedImage(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { removeFeaturedImage(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"removeFeaturedImage\" on type \"RootMutation\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "setFeaturedImage",
            "type": "PostTypeLabelDetails",
            "query": "mutation { setFeaturedImage(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { setFeaturedImage(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"setFeaturedImage\" on type \"RootMutation\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "srcSet",
            "type": "MediaItem",
            "query": "mutation { srcSet(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { srcSet(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"srcSet\" on type \"RootMutation\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "createdTimestamp",
            "type": "MediaItemMeta",
            "query": "mutation { createdTimestamp(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { createdTimestamp(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"createdTimestamp\" on type \"RootMutation\". Did you mean \"createComment\"?",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "updateCategory",
            "type": "RootMutation",
            "query": "mutation { updateCategory(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { updateCategory(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Field UpdateCategoryInput.id of required type ID! was not provided.",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 34
                        }
                    ]
                },
                {
                    "message": "Cannot query field \"id\" on type \"UpdateCategoryPayload\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 40
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "updatePostFormat",
            "type": "RootMutation",
            "query": "mutation { updatePostFormat(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { updatePostFormat(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Field UpdatePostFormatInput.id of required type ID! was not provided.",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 36
                        }
                    ]
                },
                {
                    "message": "Cannot query field \"id\" on type \"UpdatePostFormatPayload\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 42
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "updateTag",
            "type": "RootMutation",
            "query": "mutation { updateTag(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { updateTag(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Field UpdateTagInput.id of required type ID! was not provided.",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 29
                        }
                    ]
                },
                {
                    "message": "Cannot query field \"id\" on type \"UpdateTagPayload\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 35
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "createCategory",
            "type": "RootMutation",
            "query": "mutation { createCategory(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { createCategory(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Field CreateCategoryInput.name of required type String! was not provided.",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 34
                        }
                    ]
                },
                {
                    "message": "Cannot query field \"id\" on type \"CreateCategoryPayload\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 40
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "createComment",
            "type": "RootMutation",
            "query": "mutation { createComment(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { createComment(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"id\" on type \"CreateCommentPayload\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 39
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "createMediaItem",
            "type": "RootMutation",
            "query": "mutation { createMediaItem(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { createMediaItem(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"id\" on type \"CreateMediaItemPayload\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 41
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "createPage",
            "type": "RootMutation",
            "query": "mutation { createPage(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { createPage(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"id\" on type \"CreatePagePayload\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 36
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "createPost",
            "type": "RootMutation",
            "query": "mutation { createPost(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { createPost(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"id\" on type \"CreatePostPayload\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 36
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "createPostFormat",
            "type": "RootMutation",
            "query": "mutation { createPostFormat(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { createPostFormat(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Field CreatePostFormatInput.name of required type String! was not provided.",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 36
                        }
                    ]
                },
                {
                    "message": "Cannot query field \"id\" on type \"CreatePostFormatPayload\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 42
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "createTag",
            "type": "RootMutation",
            "query": "mutation { createTag(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { createTag(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Field CreateTagInput.name of required type String! was not provided.",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 29
                        }
                    ]
                },
                {
                    "message": "Cannot query field \"id\" on type \"CreateTagPayload\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 35
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "createUser",
            "type": "RootMutation",
            "query": "mutation { createUser(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { createUser(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Field CreateUserInput.username of required type String! was not provided.",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 30
                        }
                    ]
                },
                {
                    "message": "Cannot query field \"id\" on type \"CreateUserPayload\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 36
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "deleteCategory",
            "type": "RootMutation",
            "query": "mutation { deleteCategory(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { deleteCategory(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Field DeleteCategoryInput.id of required type ID! was not provided.",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 34
                        }
                    ]
                },
                {
                    "message": "Cannot query field \"id\" on type \"DeleteCategoryPayload\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 40
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "deleteComment",
            "type": "RootMutation",
            "query": "mutation { deleteComment(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { deleteComment(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Field DeleteCommentInput.id of required type ID! was not provided.",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 33
                        }
                    ]
                },
                {
                    "message": "Cannot query field \"id\" on type \"DeleteCommentPayload\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 39
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "deleteMediaItem",
            "type": "RootMutation",
            "query": "mutation { deleteMediaItem(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { deleteMediaItem(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Field DeleteMediaItemInput.id of required type ID! was not provided.",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 35
                        }
                    ]
                },
                {
                    "message": "Cannot query field \"id\" on type \"DeleteMediaItemPayload\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 41
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "deletePage",
            "type": "RootMutation",
            "query": "mutation { deletePage(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { deletePage(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Field DeletePageInput.id of required type ID! was not provided.",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 30
                        }
                    ]
                },
                {
                    "message": "Cannot query field \"id\" on type \"DeletePagePayload\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 36
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "deletePost",
            "type": "RootMutation",
            "query": "mutation { deletePost(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { deletePost(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Field DeletePostInput.id of required type ID! was not provided.",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 30
                        }
                    ]
                },
                {
                    "message": "Cannot query field \"id\" on type \"DeletePostPayload\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 36
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "deletePostFormat",
            "type": "RootMutation",
            "query": "mutation { deletePostFormat(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { deletePostFormat(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Field DeletePostFormatInput.id of required type ID! was not provided.",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 36
                        }
                    ]
                },
                {
                    "message": "Cannot query field \"id\" on type \"DeletePostFormatPayload\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 42
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "deleteTag",
            "type": "RootMutation",
            "query": "mutation { deleteTag(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { deleteTag(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Field DeleteTagInput.id of required type ID! was not provided.",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 29
                        }
                    ]
                },
                {
                    "message": "Cannot query field \"id\" on type \"DeleteTagPayload\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 35
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "deleteUser",
            "type": "RootMutation",
            "query": "mutation { deleteUser(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { deleteUser(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Field DeleteUserInput.id of required type ID! was not provided.",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 30
                        }
                    ]
                },
                {
                    "message": "Cannot query field \"id\" on type \"DeleteUserPayload\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 36
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "increaseCount",
            "type": "RootMutation",
            "query": "mutation { increaseCount(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { increaseCount(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Field \"increaseCount\" of type \"Int\" must not have a sub selection.",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 37
                        }
                    ]
                },
                {
                    "message": "Unknown argument \"input\" on field \"increaseCount\" of type \"RootMutation\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 26
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "registerUser",
            "type": "RootMutation",
            "query": "mutation { registerUser(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { registerUser(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Field RegisterUserInput.username of required type String! was not provided.",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 32
                        }
                    ]
                },
                {
                    "message": "Cannot query field \"id\" on type \"RegisterUserPayload\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 38
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "resetUserPassword",
            "type": "RootMutation",
            "query": "mutation { resetUserPassword(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { resetUserPassword(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"id\" on type \"ResetUserPasswordPayload\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 43
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "restoreComment",
            "type": "RootMutation",
            "query": "mutation { restoreComment(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { restoreComment(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Field RestoreCommentInput.id of required type ID! was not provided.",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 34
                        }
                    ]
                },
                {
                    "message": "Cannot query field \"id\" on type \"RestoreCommentPayload\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 40
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "sendPasswordResetEmail",
            "type": "RootMutation",
            "query": "mutation { sendPasswordResetEmail(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { sendPasswordResetEmail(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Field SendPasswordResetEmailInput.username of required type String! was not provided.",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 42
                        }
                    ]
                },
                {
                    "message": "Cannot query field \"id\" on type \"SendPasswordResetEmailPayload\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 48
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "updateComment",
            "type": "RootMutation",
            "query": "mutation { updateComment(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { updateComment(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Field UpdateCommentInput.id of required type ID! was not provided.",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 33
                        }
                    ]
                },
                {
                    "message": "Cannot query field \"id\" on type \"UpdateCommentPayload\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 39
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "updateMediaItem",
            "type": "RootMutation",
            "query": "mutation { updateMediaItem(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { updateMediaItem(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Field UpdateMediaItemInput.id of required type ID! was not provided.",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 35
                        }
                    ]
                },
                {
                    "message": "Cannot query field \"id\" on type \"UpdateMediaItemPayload\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 41
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "updatePage",
            "type": "RootMutation",
            "query": "mutation { updatePage(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { updatePage(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Field UpdatePageInput.id of required type ID! was not provided.",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 30
                        }
                    ]
                },
                {
                    "message": "Cannot query field \"id\" on type \"UpdatePagePayload\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 36
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "updatePost",
            "type": "RootMutation",
            "query": "mutation { updatePost(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { updatePost(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Field UpdatePostInput.id of required type ID! was not provided.",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 30
                        }
                    ]
                },
                {
                    "message": "Cannot query field \"id\" on type \"UpdatePostPayload\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 36
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "updateSettings",
            "type": "RootMutation",
            "query": "mutation { updateSettings(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { updateSettings(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"id\" on type \"UpdateSettingsPayload\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 40
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "updateUser",
            "type": "RootMutation",
            "query": "mutation { updateUser(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { updateUser(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Field UpdateUserInput.id of required type ID! was not provided.",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 30
                        }
                    ]
                },
                {
                    "message": "Cannot query field \"id\" on type \"UpdateUserPayload\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 36
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "deletedId",
            "type": "DeleteCategoryPayload",
            "query": "mutation { deletedId(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { deletedId(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"deletedId\" on type \"RootMutation\". Did you mean \"deleteTag\", \"deletePage\", \"deletePost\", or \"deleteUser\"?",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "deletedId",
            "type": "DeleteCommentPayload",
            "query": "mutation { deletedId(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { deletedId(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"deletedId\" on type \"RootMutation\". Did you mean \"deleteTag\", \"deletePage\", \"deletePost\", or \"deleteUser\"?",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "deletedId",
            "type": "DeleteMediaItemPayload",
            "query": "mutation { deletedId(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { deletedId(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"deletedId\" on type \"RootMutation\". Did you mean \"deleteTag\", \"deletePage\", \"deletePost\", or \"deleteUser\"?",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "deletedId",
            "type": "DeletePagePayload",
            "query": "mutation { deletedId(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { deletedId(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"deletedId\" on type \"RootMutation\". Did you mean \"deleteTag\", \"deletePage\", \"deletePost\", or \"deleteUser\"?",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "deletedId",
            "type": "DeletePostPayload",
            "query": "mutation { deletedId(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { deletedId(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"deletedId\" on type \"RootMutation\". Did you mean \"deleteTag\", \"deletePage\", \"deletePost\", or \"deleteUser\"?",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "deletedId",
            "type": "DeletePostFormatPayload",
            "query": "mutation { deletedId(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { deletedId(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"deletedId\" on type \"RootMutation\". Did you mean \"deleteTag\", \"deletePage\", \"deletePost\", or \"deleteUser\"?",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "deletedId",
            "type": "DeleteTagPayload",
            "query": "mutation { deletedId(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { deletedId(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"deletedId\" on type \"RootMutation\". Did you mean \"deleteTag\", \"deletePage\", \"deletePost\", or \"deleteUser\"?",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "deletedId",
            "type": "DeleteUserPayload",
            "query": "mutation { deletedId(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { deletedId(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"deletedId\" on type \"RootMutation\". Did you mean \"deleteTag\", \"deletePage\", \"deletePost\", or \"deleteUser\"?",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "allSettings",
            "type": "UpdateSettingsPayload",
            "query": "mutation { allSettings(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { allSettings(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"allSettings\" on type \"RootMutation\". Did you mean \"updateSettings\"?",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "discussionSettings",
            "type": "UpdateSettingsPayload",
            "query": "mutation { discussionSettings(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { discussionSettings(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"discussionSettings\" on type \"RootMutation\".",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "generalSettings",
            "type": "UpdateSettingsPayload",
            "query": "mutation { generalSettings(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { generalSettings(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"generalSettings\" on type \"RootMutation\". Did you mean \"updateSettings\"?",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "readingSettings",
            "type": "UpdateSettingsPayload",
            "query": "mutation { readingSettings(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { readingSettings(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"readingSettings\" on type \"RootMutation\". Did you mean \"updateSettings\"?",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Dynamic Mutation Test": {
        "status": "Mutation Possible",
        "details": {
            "field": "writingSettings",
            "type": "UpdateSettingsPayload",
            "query": "mutation { writingSettings(input: {}) { id } }",
            "status_code": 200
        },
        "query": "mutation { writingSettings(input: {}) { id } }",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"writingSettings\" on type \"RootMutation\". Did you mean \"updateSettings\"?",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 12
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "DoS Attack": {
        "status": "No Vulnerability Found",
        "details": {
            "vulnerability": "Denial of Service (DoS)",
            "severity": "High",
            "description": "This test floods the server with repeated requests to check if the server can handle high load without service degradation or crash.",
            "remediation": "Implement rate limiting, use a robust load balancer, and consider auto-scaling."
        },
        "query": "query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }",
        "response": {
            "200": 100
        }
    }
}
{
    "Deep Recursion Test on RootQuery": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { categories  { allSettings  { categories  { allSettings  { categories  { allSettings  { categories  { allSettings  { categories  { allSettings  {  categories  { allSettings  { categories  { allSettings  { categories  { allSettings  { categories  { allSettings  { categories  { allSettings  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 300
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on RootQuery": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { comment  { category  { comment  { category  { comment  { category  { comment  { category  { comment  { category  {  comment  { category  { comment  { category  { comment  { category  { comment  { category  { comment  { category  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 240
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on RootQuery": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { contentNodes  { comments  { contentNodes  { comments  { contentNodes  { comments  { contentNodes  { comments  { contentNodes  { comments  {  contentNodes  { comments  { contentNodes  { comments  { contentNodes  { comments  { contentNodes  { comments  { contentNodes  { comments  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 290
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on RootQuery": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { contentTypes  { contentType  { contentTypes  { contentType  { contentTypes  { contentType  { contentTypes  { contentType  { contentTypes  { contentType  {  contentTypes  { contentType  { contentTypes  { contentType  { contentTypes  { contentType  { contentTypes  { contentType  { contentTypes  { contentType  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 320
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on RootQuery": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { generalSettings  { discussionSettings  { generalSettings  { discussionSettings  { generalSettings  { discussionSettings  { generalSettings  { discussionSettings  { generalSettings  { discussionSettings  {  generalSettings  { discussionSettings  { generalSettings  { discussionSettings  { generalSettings  { discussionSettings  { generalSettings  { discussionSettings  { generalSettings  { discussionSettings  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 420
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on RootQuery": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { mediaItems  { mediaItem  { mediaItems  { mediaItem  { mediaItems  { mediaItem  { mediaItems  { mediaItem  { mediaItems  { mediaItem  {  mediaItems  { mediaItem  { mediaItems  { mediaItem  { mediaItems  { mediaItem  { mediaItems  { mediaItem  { mediaItems  { mediaItem  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 280
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on RootQuery": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { menuItem  { menu  { menuItem  { menu  { menuItem  { menu  { menuItem  { menu  { menuItem  { menu  {  menuItem  { menu  { menuItem  { menu  { menuItem  { menu  { menuItem  { menu  { menuItem  { menu  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 210
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on RootQuery": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { menus  { menuItems  { menus  { menuItems  { menus  { menuItems  { menus  { menuItems  { menus  { menuItems  {  menus  { menuItems  { menus  { menuItems  { menus  { menuItems  { menus  { menuItems  { menus  { menuItems  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 230
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on RootQuery": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { pages  { page  { pages  { page  { pages  { page  { pages  { page  { pages  { page  {  pages  { page  { pages  { page  { pages  { page  { pages  { page  { pages  { page  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 180
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on RootQuery": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { plugins  { plugin  { plugins  { plugin  { plugins  { plugin  { plugins  { plugin  { plugins  { plugin  {  plugins  { plugin  { plugins  { plugin  { plugins  { plugin  { plugins  { plugin  { plugins  { plugin  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 220
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on RootQuery": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { postFormat  { post  { postFormat  { post  { postFormat  { post  { postFormat  { post  { postFormat  { post  {  postFormat  { post  { postFormat  { post  { postFormat  { post  { postFormat  { post  { postFormat  { post  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 230
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on RootQuery": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { posts  { postFormats  { posts  { postFormats  { posts  { postFormats  { posts  { postFormats  { posts  { postFormats  {  posts  { postFormats  { posts  { postFormats  { posts  { postFormats  { posts  { postFormats  { posts  { postFormats  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 250
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on RootQuery": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { registeredScripts  { readingSettings  { registeredScripts  { readingSettings  { registeredScripts  { readingSettings  { registeredScripts  { readingSettings  { registeredScripts  { readingSettings  {  registeredScripts  { readingSettings  { registeredScripts  { readingSettings  { registeredScripts  { readingSettings  { registeredScripts  { readingSettings  { registeredScripts  { readingSettings  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 410
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on RootQuery": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { revisions  { registeredStylesheets  { revisions  { registeredStylesheets  { revisions  { registeredStylesheets  { revisions  { registeredStylesheets  { revisions  { registeredStylesheets  {  revisions  { registeredStylesheets  { revisions  { registeredStylesheets  { revisions  { registeredStylesheets  { revisions  { registeredStylesheets  { revisions  { registeredStylesheets  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 390
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on RootQuery": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { tags  { tag  { tags  { tag  { tags  { tag  { tags  { tag  { tags  { tag  {  tags  { tag  { tags  { tag  { tags  { tag  { tags  { tag  { tags  { tag  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 160
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on RootQuery": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { taxonomy  { taxonomies  { taxonomy  { taxonomies  { taxonomy  { taxonomies  { taxonomy  { taxonomies  { taxonomy  { taxonomies  {  taxonomy  { taxonomies  { taxonomy  { taxonomies  { taxonomy  { taxonomies  { taxonomy  { taxonomies  { taxonomy  { taxonomies  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 270
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on RootQuery": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { theme  { terms  { theme  { terms  { theme  { terms  { theme  { terms  { theme  { terms  {  theme  { terms  { theme  { terms  { theme  { terms  { theme  { terms  { theme  { terms  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 190
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on RootQuery": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { user  { themes  { user  { themes  { user  { themes  { user  { themes  { user  { themes  {  user  { themes  { user  { themes  { user  { themes  { user  { themes  { user  { themes  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 190
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on RootQuery": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { userRoles  { userRole  { userRoles  { userRole  { userRoles  { userRole  { userRoles  { userRole  { userRoles  { userRole  {  userRoles  { userRole  { userRoles  { userRole  { userRoles  { userRole  { userRoles  { userRole  { userRoles  { userRole  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 260
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on RootQuery": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { viewer  { users  { viewer  { users  { viewer  { users  { viewer  { users  { viewer  { users  {  viewer  { users  { viewer  { users  { viewer  { users  { viewer  { users  { viewer  { users  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 200
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on RootQueryToCategoryConnection": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { pageInfo  { writingSettings  { pageInfo  { writingSettings  { pageInfo  { writingSettings  { pageInfo  { writingSettings  { pageInfo  { writingSettings  {  pageInfo  { writingSettings  { pageInfo  { writingSettings  { pageInfo  { writingSettings  { pageInfo  { writingSettings  { pageInfo  { writingSettings  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 320
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on Category": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { ancestors  { node  { ancestors  { node  { ancestors  { node  { ancestors  { node  { ancestors  { node  {  ancestors  { node  { ancestors  { node  { ancestors  { node  { ancestors  { node  { ancestors  { node  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 220
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on Category": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { contentNodes  { children  { contentNodes  { children  { contentNodes  { children  { contentNodes  { children  { contentNodes  { children  {  contentNodes  { children  { contentNodes  { children  { contentNodes  { children  { contentNodes  { children  { contentNodes  { children  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 290
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on Category": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { enqueuedStylesheets  { enqueuedScripts  { enqueuedStylesheets  { enqueuedScripts  { enqueuedStylesheets  { enqueuedScripts  { enqueuedStylesheets  { enqueuedScripts  { enqueuedStylesheets  { enqueuedScripts  {  enqueuedStylesheets  { enqueuedScripts  { enqueuedStylesheets  { enqueuedScripts  { enqueuedStylesheets  { enqueuedScripts  { enqueuedStylesheets  { enqueuedScripts  { enqueuedStylesheets  { enqueuedScripts  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 430
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on Category": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { posts  { parent  { posts  { parent  { posts  { parent  { posts  { parent  { posts  { parent  {  posts  { parent  { posts  { parent  { posts  { parent  { posts  { parent  { posts  { parent  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 200
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on TermNode": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { enqueuedScripts  { taxonomy  { enqueuedScripts  { taxonomy  { enqueuedScripts  { taxonomy  { enqueuedScripts  { taxonomy  { enqueuedScripts  { taxonomy  {  enqueuedScripts  { taxonomy  { enqueuedScripts  { taxonomy  { enqueuedScripts  { taxonomy  { enqueuedScripts  { taxonomy  { enqueuedScripts  { taxonomy  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 320
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on TermNodeToEnqueuedScriptConnection": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { pageInfo  { enqueuedStylesheets  { pageInfo  { enqueuedStylesheets  { pageInfo  { enqueuedStylesheets  { pageInfo  { enqueuedStylesheets  { pageInfo  { enqueuedStylesheets  {  pageInfo  { enqueuedStylesheets  { pageInfo  { enqueuedStylesheets  { pageInfo  { enqueuedStylesheets  { pageInfo  { enqueuedStylesheets  { pageInfo  { enqueuedStylesheets  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 360
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on TermNodeToEnqueuedStylesheetConnection": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  {  pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 210
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on CategoryToAncestorsCategoryConnection": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  {  pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 210
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on CategoryToCategoryConnection": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  {  pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 210
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on CategoryToContentNodeConnection": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  {  pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 210
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on ContentNode": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { editingLockedBy  { contentType  { editingLockedBy  { contentType  { editingLockedBy  { contentType  { editingLockedBy  { contentType  { editingLockedBy  { contentType  {  editingLockedBy  { contentType  { editingLockedBy  { contentType  { editingLockedBy  { contentType  { editingLockedBy  { contentType  { editingLockedBy  { contentType  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 350
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on ContentNode": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { enqueuedStylesheets  { enqueuedScripts  { enqueuedStylesheets  { enqueuedScripts  { enqueuedStylesheets  { enqueuedScripts  { enqueuedStylesheets  { enqueuedScripts  { enqueuedStylesheets  { enqueuedScripts  {  enqueuedStylesheets  { enqueuedScripts  { enqueuedStylesheets  { enqueuedScripts  { enqueuedStylesheets  { enqueuedScripts  { enqueuedStylesheets  { enqueuedScripts  { enqueuedStylesheets  { enqueuedScripts  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 430
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on ContentNodeToContentTypeConnectionEdge": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { node  { lastEditedBy  { node  { lastEditedBy  { node  { lastEditedBy  { node  { lastEditedBy  { node  { lastEditedBy  {  node  { lastEditedBy  { node  { lastEditedBy  { node  { lastEditedBy  { node  { lastEditedBy  { node  { lastEditedBy  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 250
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on ContentType": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { contentNodes  { connectedTaxonomies  { contentNodes  { connectedTaxonomies  { contentNodes  { connectedTaxonomies  { contentNodes  { connectedTaxonomies  { contentNodes  { connectedTaxonomies  {  contentNodes  { connectedTaxonomies  { contentNodes  { connectedTaxonomies  { contentNodes  { connectedTaxonomies  { contentNodes  { connectedTaxonomies  { contentNodes  { connectedTaxonomies  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 400
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on ContentTypeToTaxonomyConnection": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { pageInfo  { labels  { pageInfo  { labels  { pageInfo  { labels  { pageInfo  { labels  { pageInfo  { labels  {  pageInfo  { labels  { pageInfo  { labels  { pageInfo  { labels  { pageInfo  { labels  { pageInfo  { labels  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 230
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on Taxonomy": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { connectedContentTypes  { node  { connectedContentTypes  { node  { connectedContentTypes  { node  { connectedContentTypes  { node  { connectedContentTypes  { node  {  connectedContentTypes  { node  { connectedContentTypes  { node  { connectedContentTypes  { node  { connectedContentTypes  { node  { connectedContentTypes  { node  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 340
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on TaxonomyToContentTypeConnectionEdge": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  {  node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 210
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on ContentNodeToEditLockConnectionEdge": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  {  node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 210
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on User": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { comments  { avatar  { comments  { avatar  { comments  { avatar  { comments  { avatar  { comments  { avatar  {  comments  { avatar  { comments  { avatar  { comments  { avatar  { comments  { avatar  { comments  { avatar  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 230
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on User": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { enqueuedStylesheets  { enqueuedScripts  { enqueuedStylesheets  { enqueuedScripts  { enqueuedStylesheets  { enqueuedScripts  { enqueuedStylesheets  { enqueuedScripts  { enqueuedStylesheets  { enqueuedScripts  {  enqueuedStylesheets  { enqueuedScripts  { enqueuedStylesheets  { enqueuedScripts  { enqueuedStylesheets  { enqueuedScripts  { enqueuedStylesheets  { enqueuedScripts  { enqueuedStylesheets  { enqueuedScripts  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 430
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on User": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { pages  { mediaItems  { pages  { mediaItems  { pages  { mediaItems  { pages  { mediaItems  { pages  { mediaItems  {  pages  { mediaItems  { pages  { mediaItems  { pages  { mediaItems  { pages  { mediaItems  { pages  { mediaItems  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 240
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on User": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { revisions  { posts  { revisions  { posts  { revisions  { posts  { revisions  { posts  { revisions  { posts  {  revisions  { posts  { revisions  { posts  { revisions  { posts  { revisions  { posts  { revisions  { posts  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 230
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on UserToCommentConnection": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { pageInfo  { roles  { pageInfo  { roles  { pageInfo  { roles  { pageInfo  { roles  { pageInfo  { roles  {  pageInfo  { roles  { pageInfo  { roles  { pageInfo  { roles  { pageInfo  { roles  { pageInfo  { roles  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 220
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on Comment": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { author  { node  { author  { node  { author  { node  { author  { node  { author  { node  {  author  { node  { author  { node  { author  { node  { author  { node  { author  { node  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 190
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on Comment": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { parent  { commentedOn  { parent  { commentedOn  { parent  { commentedOn  { parent  { commentedOn  { parent  { commentedOn  {  parent  { commentedOn  { parent  { commentedOn  { parent  { commentedOn  { parent  { commentedOn  { parent  { commentedOn  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 260
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on CommentToParentCommentConnectionEdge": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { node  { replies  { node  { replies  { node  { replies  { node  { replies  { node  { replies  {  node  { replies  { node  { replies  { node  { replies  { node  { replies  { node  { replies  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 200
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on CommentToCommentConnectionEdge": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  {  node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 210
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on UserToEnqueuedScriptConnectionEdge": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  {  node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 210
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on UserToEnqueuedStylesheetConnectionEdge": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  {  node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 210
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on UserToMediaItemConnectionEdge": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  {  node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 210
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on MediaItem": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { author  { ancestors  { author  { ancestors  { author  { ancestors  { author  { ancestors  { author  { ancestors  {  author  { ancestors  { author  { ancestors  { author  { ancestors  { author  { ancestors  { author  { ancestors  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 240
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on MediaItem": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { comments  { children  { comments  { children  { comments  { children  { comments  { children  { comments  { children  {  comments  { children  { comments  { children  { comments  { children  { comments  { children  { comments  { children  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 250
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on MediaItem": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { editingLockedBy  { contentType  { editingLockedBy  { contentType  { editingLockedBy  { contentType  { editingLockedBy  { contentType  { editingLockedBy  { contentType  {  editingLockedBy  { contentType  { editingLockedBy  { contentType  { editingLockedBy  { contentType  { editingLockedBy  { contentType  { editingLockedBy  { contentType  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 350
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on MediaItem": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { enqueuedStylesheets  { enqueuedScripts  { enqueuedStylesheets  { enqueuedScripts  { enqueuedStylesheets  { enqueuedScripts  { enqueuedStylesheets  { enqueuedScripts  { enqueuedStylesheets  { enqueuedScripts  {  enqueuedStylesheets  { enqueuedScripts  { enqueuedStylesheets  { enqueuedScripts  { enqueuedStylesheets  { enqueuedScripts  { enqueuedStylesheets  { enqueuedScripts  { enqueuedStylesheets  { enqueuedScripts  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 430
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on MediaItem": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { mediaDetails  { lastEditedBy  { mediaDetails  { lastEditedBy  { mediaDetails  { lastEditedBy  { mediaDetails  { lastEditedBy  { mediaDetails  { lastEditedBy  {  mediaDetails  { lastEditedBy  { mediaDetails  { lastEditedBy  { mediaDetails  { lastEditedBy  { mediaDetails  { lastEditedBy  { mediaDetails  { lastEditedBy  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 330
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on NodeWithAuthor": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { author  { parent  { author  { parent  { author  { parent  { author  { parent  { author  { parent  {  author  { parent  { author  { parent  { author  { parent  { author  { parent  { author  { parent  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 210
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on HierarchicalContentNode": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { ancestors  { node  { ancestors  { node  { ancestors  { node  { ancestors  { node  { ancestors  { node  {  ancestors  { node  { ancestors  { node  { ancestors  { node  { ancestors  { node  { ancestors  { node  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 220
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on HierarchicalContentNode": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { parent  { children  { parent  { children  { parent  { children  { parent  { children  { parent  { children  {  parent  { children  { parent  { children  { parent  { children  { parent  { children  { parent  { children  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 230
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on HierarchicalContentNodeToContentNodeChildrenConnection": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { pageInfo  { pageInfo  { pageInfo  { pageInfo  { pageInfo  { pageInfo  { pageInfo  { pageInfo  { pageInfo  { pageInfo  {  pageInfo  { pageInfo  { pageInfo  { pageInfo  { pageInfo  { pageInfo  { pageInfo  { pageInfo  { pageInfo  { pageInfo  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 250
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on MediaItemToCommentConnectionEdge": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  {  node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 210
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on ContentNodeToEnqueuedScriptConnectionEdge": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  {  node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 210
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on ContentNodeToEnqueuedStylesheetConnectionEdge": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  {  node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 210
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on MediaDetails": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { meta  { node  { meta  { node  { meta  { node  { meta  { node  { meta  { node  {  meta  { node  { meta  { node  { meta  { node  { meta  { node  { meta  { node  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 170
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on UserToPageConnectionEdge": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  {  node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 210
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on Page": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { author  { ancestors  { author  { ancestors  { author  { ancestors  { author  { ancestors  { author  { ancestors  {  author  { ancestors  { author  { ancestors  { author  { ancestors  { author  { ancestors  { author  { ancestors  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 240
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on Page": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { comments  { children  { comments  { children  { comments  { children  { comments  { children  { comments  { children  {  comments  { children  { comments  { children  { comments  { children  { comments  { children  { comments  { children  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 250
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on Page": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { editingLockedBy  { contentType  { editingLockedBy  { contentType  { editingLockedBy  { contentType  { editingLockedBy  { contentType  { editingLockedBy  { contentType  {  editingLockedBy  { contentType  { editingLockedBy  { contentType  { editingLockedBy  { contentType  { editingLockedBy  { contentType  { editingLockedBy  { contentType  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 350
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on Page": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { enqueuedStylesheets  { enqueuedScripts  { enqueuedStylesheets  { enqueuedScripts  { enqueuedStylesheets  { enqueuedScripts  { enqueuedStylesheets  { enqueuedScripts  { enqueuedStylesheets  { enqueuedScripts  {  enqueuedStylesheets  { enqueuedScripts  { enqueuedStylesheets  { enqueuedScripts  { enqueuedStylesheets  { enqueuedScripts  { enqueuedStylesheets  { enqueuedScripts  { enqueuedStylesheets  { enqueuedScripts  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 430
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on Page": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { lastEditedBy  { featuredImage  { lastEditedBy  { featuredImage  { lastEditedBy  { featuredImage  { lastEditedBy  { featuredImage  { lastEditedBy  { featuredImage  {  lastEditedBy  { featuredImage  { lastEditedBy  { featuredImage  { lastEditedBy  { featuredImage  { lastEditedBy  { featuredImage  { lastEditedBy  { featuredImage  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 340
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on Page": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { preview  { parent  { preview  { parent  { preview  { parent  { preview  { parent  { preview  { parent  {  preview  { parent  { preview  { parent  { preview  { parent  { preview  { parent  { preview  { parent  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 220
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on Page": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { revisions  { revisionOf  { revisions  { revisionOf  { revisions  { revisionOf  { revisions  { revisionOf  { revisions  { revisionOf  {  revisions  { revisionOf  { revisions  { revisionOf  { revisions  { revisionOf  { revisions  { revisionOf  { revisions  { revisionOf  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 280
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on NodeWithFeaturedImageToMediaItemConnectionEdge": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { node  { featuredImage  { node  { featuredImage  { node  { featuredImage  { node  { featuredImage  { node  { featuredImage  {  node  { featuredImage  { node  { featuredImage  { node  { featuredImage  { node  { featuredImage  { node  { featuredImage  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 260
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on PageToCommentConnection": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { pageInfo  { revisionOf  { pageInfo  { revisionOf  { pageInfo  { revisionOf  { pageInfo  { revisionOf  { pageInfo  { revisionOf  {  pageInfo  { revisionOf  { pageInfo  { revisionOf  { pageInfo  { revisionOf  { pageInfo  { revisionOf  { pageInfo  { revisionOf  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 270
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on PageToPreviewConnectionEdge": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { node  { node  { node  { node  { node  { node  { node  { node  { node  { node  {  node  { node  { node  { node  { node  { node  { node  { node  { node  { node  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 170
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on PageToRevisionConnectionEdge": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  {  node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 210
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on UserToPostConnectionEdge": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  {  node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 210
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on Post": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { categories  { author  { categories  { author  { categories  { author  { categories  { author  { categories  { author  {  categories  { author  { categories  { author  { categories  { author  { categories  { author  { categories  { author  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 250
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on Post": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { contentType  { comments  { contentType  { comments  { contentType  { comments  { contentType  { comments  { contentType  { comments  {  contentType  { comments  { contentType  { comments  { contentType  { comments  { contentType  { comments  { contentType  { comments  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 280
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on Post": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { enqueuedScripts  { editingLockedBy  { enqueuedScripts  { editingLockedBy  { enqueuedScripts  { editingLockedBy  { enqueuedScripts  { editingLockedBy  { enqueuedScripts  { editingLockedBy  {  enqueuedScripts  { editingLockedBy  { enqueuedScripts  { editingLockedBy  { enqueuedScripts  { editingLockedBy  { enqueuedScripts  { editingLockedBy  { enqueuedScripts  { editingLockedBy  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 390
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on Post": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { featuredImage  { enqueuedStylesheets  { featuredImage  { enqueuedStylesheets  { featuredImage  { enqueuedStylesheets  { featuredImage  { enqueuedStylesheets  { featuredImage  { enqueuedStylesheets  {  featuredImage  { enqueuedStylesheets  { featuredImage  { enqueuedStylesheets  { featuredImage  { enqueuedStylesheets  { featuredImage  { enqueuedStylesheets  { featuredImage  { enqueuedStylesheets  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 410
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on Post": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { postFormats  { lastEditedBy  { postFormats  { lastEditedBy  { postFormats  { lastEditedBy  { postFormats  { lastEditedBy  { postFormats  { lastEditedBy  {  postFormats  { lastEditedBy  { postFormats  { lastEditedBy  { postFormats  { lastEditedBy  { postFormats  { lastEditedBy  { postFormats  { lastEditedBy  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 320
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on Post": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { revisionOf  { preview  { revisionOf  { preview  { revisionOf  { preview  { revisionOf  { preview  { revisionOf  { preview  {  revisionOf  { preview  { revisionOf  { preview  { revisionOf  { preview  { revisionOf  { preview  { revisionOf  { preview  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 260
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on Post": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { tags  { revisions  { tags  { revisions  { tags  { revisions  { tags  { revisions  { tags  { revisions  {  tags  { revisions  { tags  { revisions  { tags  { revisions  { tags  { revisions  { tags  { revisions  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 220
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on PostToCategoryConnection": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { pageInfo  { terms  { pageInfo  { terms  { pageInfo  { terms  { pageInfo  { terms  { pageInfo  { terms  {  pageInfo  { terms  { pageInfo  { terms  { pageInfo  { terms  { pageInfo  { terms  { pageInfo  { terms  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 220
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on PostToCommentConnection": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  {  pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 210
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on PostToPostFormatConnection": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  {  pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 210
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on PostFormat": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { contentNodes  { node  { contentNodes  { node  { contentNodes  { node  { contentNodes  { node  { contentNodes  { node  {  contentNodes  { node  { contentNodes  { node  { contentNodes  { node  { contentNodes  { node  { contentNodes  { node  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 250
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on PostFormat": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { enqueuedStylesheets  { enqueuedScripts  { enqueuedStylesheets  { enqueuedScripts  { enqueuedStylesheets  { enqueuedScripts  { enqueuedStylesheets  { enqueuedScripts  { enqueuedStylesheets  { enqueuedScripts  {  enqueuedStylesheets  { enqueuedScripts  { enqueuedStylesheets  { enqueuedScripts  { enqueuedStylesheets  { enqueuedScripts  { enqueuedStylesheets  { enqueuedScripts  { enqueuedStylesheets  { enqueuedScripts  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 430
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on PostFormat": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { taxonomy  { posts  { taxonomy  { posts  { taxonomy  { posts  { taxonomy  { posts  { taxonomy  { posts  {  taxonomy  { posts  { taxonomy  { posts  { taxonomy  { posts  { taxonomy  { posts  { taxonomy  { posts  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 220
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on PostFormatToPostConnection": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { pageInfo  { pageInfo  { pageInfo  { pageInfo  { pageInfo  { pageInfo  { pageInfo  { pageInfo  { pageInfo  { pageInfo  {  pageInfo  { pageInfo  { pageInfo  { pageInfo  { pageInfo  { pageInfo  { pageInfo  { pageInfo  { pageInfo  { pageInfo  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 250
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on PostFormatToTaxonomyConnectionEdge": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { node  { node  { node  { node  { node  { node  { node  { node  { node  { node  {  node  { node  { node  { node  { node  { node  { node  { node  { node  { node  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 170
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on PostToRevisionConnection": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  {  pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 210
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on PostToTagConnection": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  {  pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 210
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on Tag": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { contentNodes  { node  { contentNodes  { node  { contentNodes  { node  { contentNodes  { node  { contentNodes  { node  {  contentNodes  { node  { contentNodes  { node  { contentNodes  { node  { contentNodes  { node  { contentNodes  { node  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 250
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on Tag": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { enqueuedStylesheets  { enqueuedScripts  { enqueuedStylesheets  { enqueuedScripts  { enqueuedStylesheets  { enqueuedScripts  { enqueuedStylesheets  { enqueuedScripts  { enqueuedStylesheets  { enqueuedScripts  {  enqueuedStylesheets  { enqueuedScripts  { enqueuedStylesheets  { enqueuedScripts  { enqueuedStylesheets  { enqueuedScripts  { enqueuedStylesheets  { enqueuedScripts  { enqueuedStylesheets  { enqueuedScripts  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 430
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on Tag": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { taxonomy  { posts  { taxonomy  { posts  { taxonomy  { posts  { taxonomy  { posts  { taxonomy  { posts  {  taxonomy  { posts  { taxonomy  { posts  { taxonomy  { posts  { taxonomy  { posts  { taxonomy  { posts  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 220
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on TagToPostConnection": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { pageInfo  { pageInfo  { pageInfo  { pageInfo  { pageInfo  { pageInfo  { pageInfo  { pageInfo  { pageInfo  { pageInfo  {  pageInfo  { pageInfo  { pageInfo  { pageInfo  { pageInfo  { pageInfo  { pageInfo  { pageInfo  { pageInfo  { pageInfo  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 250
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on TagToTaxonomyConnectionEdge": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { node  { node  { node  { node  { node  { node  { node  { node  { node  { node  {  node  { node  { node  { node  { node  { node  { node  { node  { node  { node  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 170
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on UserToContentRevisionUnionConnection": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { pageInfo  { pageInfo  { pageInfo  { pageInfo  { pageInfo  { pageInfo  { pageInfo  { pageInfo  { pageInfo  { pageInfo  {  pageInfo  { pageInfo  { pageInfo  { pageInfo  { pageInfo  { pageInfo  { pageInfo  { pageInfo  { pageInfo  { pageInfo  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 250
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on UserToUserRoleConnectionEdge": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  {  node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 210
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on CategoryToPostConnection": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  {  pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 210
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on CategoryToTaxonomyConnectionEdge": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { node  { node  { node  { node  { node  { node  { node  { node  { node  { node  {  node  { node  { node  { node  { node  { node  { node  { node  { node  { node  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 170
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on RootQueryToCommentConnectionEdge": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  {  node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 210
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on RootQueryToContentTypeConnection": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { pageInfo  { pageInfo  { pageInfo  { pageInfo  { pageInfo  { pageInfo  { pageInfo  { pageInfo  { pageInfo  { pageInfo  {  pageInfo  { pageInfo  { pageInfo  { pageInfo  { pageInfo  { pageInfo  { pageInfo  { pageInfo  { pageInfo  { pageInfo  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 250
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on RootQueryToMediaItemConnection": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  {  pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 210
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on Menu": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { menuItems  { node  { menuItems  { node  { menuItems  { node  { menuItems  { node  { menuItems  { node  {  menuItems  { node  { menuItems  { node  { menuItems  { node  { menuItems  { node  { menuItems  { node  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 220
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on MenuToMenuItemConnectionEdge": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  {  node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 210
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on MenuItem": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { connectedNode  { childItems  { connectedNode  { childItems  { connectedNode  { childItems  { connectedNode  { childItems  { connectedNode  { childItems  {  connectedNode  { childItems  { connectedNode  { childItems  { connectedNode  { childItems  { connectedNode  { childItems  { connectedNode  { childItems  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 320
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on MenuItemToMenuItemConnection": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { pageInfo  { menu  { pageInfo  { menu  { pageInfo  { menu  { pageInfo  { menu  { pageInfo  { menu  {  pageInfo  { menu  { pageInfo  { menu  { pageInfo  { menu  { pageInfo  { menu  { pageInfo  { menu  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 210
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on MenuItemToMenuConnectionEdge": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { node  { node  { node  { node  { node  { node  { node  { node  { node  { node  {  node  { node  { node  { node  { node  { node  { node  { node  { node  { node  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 170
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on RootQueryToMenuItemConnectionEdge": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  {  node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 210
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on RootQueryToMenuConnectionEdge": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  {  node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 210
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on RootQueryToPageConnectionEdge": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  {  node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 210
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on RootQueryToPluginConnectionEdge": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  {  node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 210
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on RootQueryToPostFormatConnectionEdge": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  {  node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 210
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on RootQueryToPostConnectionEdge": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  {  node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 210
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on RootQueryToEnqueuedScriptConnectionEdge": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  {  node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 210
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on RootQueryToEnqueuedStylesheetConnectionEdge": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  {  node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 210
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on RootQueryToTagConnection": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { pageInfo  { pageInfo  { pageInfo  { pageInfo  { pageInfo  { pageInfo  { pageInfo  { pageInfo  { pageInfo  { pageInfo  {  pageInfo  { pageInfo  { pageInfo  { pageInfo  { pageInfo  { pageInfo  { pageInfo  { pageInfo  { pageInfo  { pageInfo  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 250
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on RootQueryToTaxonomyConnection": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  {  pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 210
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on RootQueryToTermNodeConnection": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  {  pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 210
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on RootQueryToThemeConnectionEdge": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  {  node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 210
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on RootQueryToUserRoleConnectionEdge": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  {  node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 210
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on RootQueryToUserConnectionEdge": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  {  node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { node  { pageInfo  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 210
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on RootMutation": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { updatePostFormat  { updateCategory  { updatePostFormat  { updateCategory  { updatePostFormat  { updateCategory  { updatePostFormat  { updateCategory  { updatePostFormat  { updateCategory  {  updatePostFormat  { updateCategory  { updatePostFormat  { updateCategory  { updatePostFormat  { updateCategory  { updatePostFormat  { updateCategory  { updatePostFormat  { updateCategory  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 390
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on RootMutation": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { createCategory  { updateTag  { createCategory  { updateTag  { createCategory  { updateTag  { createCategory  { updateTag  { createCategory  { updateTag  {  createCategory  { updateTag  { createCategory  { updateTag  { createCategory  { updateTag  { createCategory  { updateTag  { createCategory  { updateTag  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 320
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on RootMutation": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { createMediaItem  { createComment  { createMediaItem  { createComment  { createMediaItem  { createComment  { createMediaItem  { createComment  { createMediaItem  { createComment  {  createMediaItem  { createComment  { createMediaItem  { createComment  { createMediaItem  { createComment  { createMediaItem  { createComment  { createMediaItem  { createComment  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 370
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on RootMutation": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { createPost  { createPage  { createPost  { createPage  { createPost  { createPage  { createPost  { createPage  { createPost  { createPage  {  createPost  { createPage  { createPost  { createPage  { createPost  { createPage  { createPost  { createPage  { createPost  { createPage  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 290
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on RootMutation": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { createTag  { createPostFormat  { createTag  { createPostFormat  { createTag  { createPostFormat  { createTag  { createPostFormat  { createTag  { createPostFormat  {  createTag  { createPostFormat  { createTag  { createPostFormat  { createTag  { createPostFormat  { createTag  { createPostFormat  { createTag  { createPostFormat  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 340
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on RootMutation": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { deleteCategory  { createUser  { deleteCategory  { createUser  { deleteCategory  { createUser  { deleteCategory  { createUser  { deleteCategory  { createUser  {  deleteCategory  { createUser  { deleteCategory  { createUser  { deleteCategory  { createUser  { deleteCategory  { createUser  { deleteCategory  { createUser  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 330
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on RootMutation": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { deleteMediaItem  { deleteComment  { deleteMediaItem  { deleteComment  { deleteMediaItem  { deleteComment  { deleteMediaItem  { deleteComment  { deleteMediaItem  { deleteComment  {  deleteMediaItem  { deleteComment  { deleteMediaItem  { deleteComment  { deleteMediaItem  { deleteComment  { deleteMediaItem  { deleteComment  { deleteMediaItem  { deleteComment  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 370
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on RootMutation": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { deletePost  { deletePage  { deletePost  { deletePage  { deletePost  { deletePage  { deletePost  { deletePage  { deletePost  { deletePage  {  deletePost  { deletePage  { deletePost  { deletePage  { deletePost  { deletePage  { deletePost  { deletePage  { deletePost  { deletePage  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 290
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on RootMutation": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { deleteTag  { deletePostFormat  { deleteTag  { deletePostFormat  { deleteTag  { deletePostFormat  { deleteTag  { deletePostFormat  { deleteTag  { deletePostFormat  {  deleteTag  { deletePostFormat  { deleteTag  { deletePostFormat  { deleteTag  { deletePostFormat  { deleteTag  { deletePostFormat  { deleteTag  { deletePostFormat  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 340
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on RootMutation": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { registerUser  { deleteUser  { registerUser  { deleteUser  { registerUser  { deleteUser  { registerUser  { deleteUser  { registerUser  { deleteUser  {  registerUser  { deleteUser  { registerUser  { deleteUser  { registerUser  { deleteUser  { registerUser  { deleteUser  { registerUser  { deleteUser  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 310
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on RootMutation": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { restoreComment  { resetUserPassword  { restoreComment  { resetUserPassword  { restoreComment  { resetUserPassword  { restoreComment  { resetUserPassword  { restoreComment  { resetUserPassword  {  restoreComment  { resetUserPassword  { restoreComment  { resetUserPassword  { restoreComment  { resetUserPassword  { restoreComment  { resetUserPassword  { restoreComment  { resetUserPassword  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 400
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on RootMutation": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { updateComment  { sendPasswordResetEmail  { updateComment  { sendPasswordResetEmail  { updateComment  { sendPasswordResetEmail  { updateComment  { sendPasswordResetEmail  { updateComment  { sendPasswordResetEmail  {  updateComment  { sendPasswordResetEmail  { updateComment  { sendPasswordResetEmail  { updateComment  { sendPasswordResetEmail  { updateComment  { sendPasswordResetEmail  { updateComment  { sendPasswordResetEmail  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 440
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on RootMutation": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { updatePage  { updateMediaItem  { updatePage  { updateMediaItem  { updatePage  { updateMediaItem  { updatePage  { updateMediaItem  { updatePage  { updateMediaItem  {  updatePage  { updateMediaItem  { updatePage  { updateMediaItem  { updatePage  { updateMediaItem  { updatePage  { updateMediaItem  { updatePage  { updateMediaItem  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 340
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on RootMutation": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { updateSettings  { updatePost  { updateSettings  { updatePost  { updateSettings  { updatePost  { updateSettings  { updatePost  { updateSettings  { updatePost  {  updateSettings  { updatePost  { updateSettings  { updatePost  { updateSettings  { updatePost  { updateSettings  { updatePost  { updateSettings  { updatePost  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 330
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on UpdateCategoryPayload": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { category  { updateUser  { category  { updateUser  { category  { updateUser  { category  { updateUser  { category  { updateUser  {  category  { updateUser  { category  { updateUser  { category  { updateUser  { category  { updateUser  { category  { updateUser  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 270
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on UpdateTagPayload": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { tag  { postFormat  { tag  { postFormat  { tag  { postFormat  { tag  { postFormat  { tag  { postFormat  {  tag  { postFormat  { tag  { postFormat  { tag  { postFormat  { tag  { postFormat  { tag  { postFormat  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 220
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on CreateCommentPayload": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { comment  { category  { comment  { category  { comment  { category  { comment  { category  { comment  { category  {  comment  { category  { comment  { category  { comment  { category  { comment  { category  { comment  { category  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 240
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on CreatePagePayload": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { page  { mediaItem  { page  { mediaItem  { page  { mediaItem  { page  { mediaItem  { page  { mediaItem  {  page  { mediaItem  { page  { mediaItem  { page  { mediaItem  { page  { mediaItem  { page  { mediaItem  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 220
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on CreatePostFormatPayload": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { postFormat  { post  { postFormat  { post  { postFormat  { post  { postFormat  { post  { postFormat  { post  {  postFormat  { post  { postFormat  { post  { postFormat  { post  { postFormat  { post  { postFormat  { post  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 230
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on CreateUserPayload": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { user  { tag  { user  { tag  { user  { tag  { user  { tag  { user  { tag  {  user  { tag  { user  { tag  { user  { tag  { user  { tag  { user  { tag  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 160
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on DeleteCommentPayload": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { comment  { category  { comment  { category  { comment  { category  { comment  { category  { comment  { category  {  comment  { category  { comment  { category  { comment  { category  { comment  { category  { comment  { category  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 240
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on DeletePagePayload": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { page  { mediaItem  { page  { mediaItem  { page  { mediaItem  { page  { mediaItem  { page  { mediaItem  {  page  { mediaItem  { page  { mediaItem  { page  { mediaItem  { page  { mediaItem  { page  { mediaItem  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 220
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on DeletePostFormatPayload": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { postFormat  { post  { postFormat  { post  { postFormat  { post  { postFormat  { post  { postFormat  { post  {  postFormat  { post  { postFormat  { post  { postFormat  { post  { postFormat  { post  { postFormat  { post  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 230
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on DeleteUserPayload": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { user  { tag  { user  { tag  { user  { tag  { user  { tag  { user  { tag  {  user  { tag  { user  { tag  { user  { tag  { user  { tag  { user  { tag  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 160
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on ResetUserPasswordPayload": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { user  { user  { user  { user  { user  { user  { user  { user  { user  { user  {  user  { user  { user  { user  { user  { user  { user  { user  { user  { user  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 170
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on SendPasswordResetEmailPayload": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { user  { comment  { user  { comment  { user  { comment  { user  { comment  { user  { comment  {  user  { comment  { user  { comment  { user  { comment  { user  { comment  { user  { comment  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 200
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on UpdateMediaItemPayload": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { mediaItem  { comment  { mediaItem  { comment  { mediaItem  { comment  { mediaItem  { comment  { mediaItem  { comment  {  mediaItem  { comment  { mediaItem  { comment  { mediaItem  { comment  { mediaItem  { comment  { mediaItem  { comment  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 250
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on UpdatePostPayload": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { post  { page  { post  { page  { post  { page  { post  { page  { post  { page  {  post  { page  { post  { page  { post  { page  { post  { page  { post  { page  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 170
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on UpdateSettingsPayload": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { discussionSettings  { allSettings  { discussionSettings  { allSettings  { discussionSettings  { allSettings  { discussionSettings  { allSettings  { discussionSettings  { allSettings  {  discussionSettings  { allSettings  { discussionSettings  { allSettings  { discussionSettings  { allSettings  { discussionSettings  { allSettings  { discussionSettings  { allSettings  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 380
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on UpdateSettingsPayload": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { readingSettings  { generalSettings  { readingSettings  { generalSettings  { readingSettings  { generalSettings  { readingSettings  { generalSettings  { readingSettings  { generalSettings  {  readingSettings  { generalSettings  { readingSettings  { generalSettings  { readingSettings  { generalSettings  { readingSettings  { generalSettings  { readingSettings  { generalSettings  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 390
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on UpdateUserPayload": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { user  { writingSettings  { user  { writingSettings  { user  { writingSettings  { user  { writingSettings  { user  { writingSettings  {  user  { writingSettings  { user  { writingSettings  { user  { writingSettings  { user  { writingSettings  { user  { writingSettings  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 280
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Deep Recursion Test on __Schema": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { subscriptionType  { mutationType  { subscriptionType  { mutationType  { subscriptionType  { mutationType  { subscriptionType  { mutationType  { subscriptionType  { mutationType  {  subscriptionType  { mutationType  { subscriptionType  { mutationType  { subscriptionType  { mutationType  { subscriptionType  { mutationType  { subscriptionType  { mutationType  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error: Expected Name, found }",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 1,
                            "column": 370
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "SQL Injection Test on 'pastes' field": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "SQL Injection",
            "severity": "High",
            "description": "Attempts to exploit SQL injection vulnerabilities by injecting malicious SQL code through GraphQL queries.",
            "remediation": "Use parameterized queries or prepared statements to handle user input."
        },
        "query": "\n        query {\n            pastes(filter: \"one two three'\") {\n                title\n                content\n                public\n            }\n        }\n        ",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"pastes\" on type \"RootQuery\". Did you mean \"pages\", \"posts\", \"page\", \"post\", or \"postBy\"?",
                    "extensions": {
                        "category": "graphql"
                    },
                    "locations": [
                        {
                            "line": 3,
                            "column": 13
                        }
                    ]
                }
            ],
            "extensions": {
                "debug": []
            }
        }
    }
}
{
    "Get Users Test": {
        "status": "Vulnerability Found",
        "details": {
            "description": "Tests if user data for administrators can be fetched without proper authorization.",
            "severity": "High"
        },
        "query": "\n        query getUsers {\n          users(where: {role: ADMINISTRATOR}) {\n            edges {\n              node {\n                userId\n                name\n              }\n            }\n          }\n        }\n        ",
        "response": {
            "errors": [
                {
                    "message": "Sorry, you are not allowed to filter users by role.",
                    "extensions": {
                        "category": "user"
                    },
                    "locations": [
                        {
                            "line": 3,
                            "column": 11
                        }
                    ],
                    "path": [
                        "users"
                    ]
                }
            ],
            "data": {
                "users": null
            },
            "extensions": {
                "debug": []
            }
        }
    }
}
