{
    "DoS Attack": {
        "status": "Vulnerability Found",
        "details": {
            "vulnerability": "Denial of Service (DoS)",
            "severity": "High",
            "description": "This test floods the server with repeated requests to check if the server can handle high load without service degradation or crash.",
            "remediation": "Implement rate limiting, use a robust load balancer, and consider auto-scaling."
        },
        "query": "query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }query { systemUpdate }",
        "response": {
            "400": 100
        }
    }
}
{
    "SQL Injection Test on 'pastes' field": {
        "status": "No Vulnerability Found (HTTP Error)",
        "details": {
            "vulnerability": "SQL Injection",
            "severity": "High",
            "description": "Attempts to exploit SQL injection vulnerabilities by injecting malicious SQL code through GraphQL queries.",
            "remediation": "Use parameterized queries or prepared statements to handle user input."
        },
        "query": "\n        query {\n            pastes(filter: \"one two three'\") {\n                title\n                content\n                public\n            }\n        }\n        ",
        "response": {
            "errors": [
                {
                    "message": "Cannot query field \"pastes\" on type \"Query\". Did you mean \"pages\", \"page\", \"sales\" or \"payments\"?",
                    "locations": [
                        {
                            "line": 3,
                            "column": 13
                        }
                    ],
                    "extensions": {
                        "exception": {
                            "code": "GraphQLError",
                            "stacktrace": [
                                "graphql.error.base.GraphQLError: Cannot query field \"pastes\" on type \"Query\". Did you mean \"pages\", \"page\", \"sales\" or \"payments\"?"
                            ]
                        }
                    }
                }
            ],
            "extensions": {
                "cost": {
                    "requestedQueryCost": 0,
                    "maximumAvailable": 50000
                }
            }
        }
    }
}
{
    "Get Users Test": {
        "status": "Test Not Applicable",
        "details": {
            "description": "Tests if user data for administrators can be fetched without proper authorization.",
            "severity": "High"
        },
        "query": "\n        query getUsers {\n          users(where: {role: ADMINISTRATOR}) {\n            edges {\n              node {\n                userId\n                name\n              }\n            }\n          }\n        }\n        ",
        "response": "400 Client Error: Bad Request for url: http://localhost:8000/graphql/"
    }
}
